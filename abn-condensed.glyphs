{
.appVersion = "3133";
.formatVersion = 3;
DisplayStrings = (
"",
"Â©"
);
customParameters = (
{
disabled = 1;
name = vendorID;
value = "";
},
{
name = panose;
value = (
2,
11,
7,
6,
2,
2,
2,
2,
2,
4
);
},
{
name = unicodeRanges;
value = (
17,
18,
19,
21,
23,
25,
33,
34,
49,
50,
51,
53,
55,
56,
57,
58,
80,
84,
86,
91,
96,
97,
98,
114,
115,
116,
118,
121,
123
);
},
{
name = fsType;
value = (
1,
2
);
},
{
name = glyphOrder;
value = (
.notdef,
noName00001,
noName00002,
space,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
Adieresis,
Aring,
Ccedilla,
Eacute,
Ntilde,
Odieresis,
Udieresis,
aacute,
agrave,
acircumflex,
adieresis,
atilde,
aring,
ccedilla,
eacute,
egrave,
ecircumflex,
edieresis,
iacute,
igrave,
icircumflex,
idieresis,
ntilde,
oacute,
ograve,
ocircumflex,
odieresis,
otilde,
uacute,
ugrave,
ucircumflex,
udieresis,
dagger,
degree,
cent,
sterling,
section,
bullet,
paragraph,
germandbls,
registered,
copyright,
trademark,
acute,
dieresis,
notequal,
AE,
Oslash,
infinity,
plusminus,
lessequal,
greaterequal,
yen,
mu,
partialdiff,
summation,
product,
pi,
integral,
ordfeminine,
ordmasculine,
Omega,
ae,
oslash,
questiondown,
exclamdown,
logicalnot,
radical,
florin,
approxequal,
Delta,
guillemotleft,
guillemotright,
ellipsis,
nbspace,
Agrave,
Atilde,
Otilde,
OE,
oe,
endash,
emdash,
quotedblleft,
quotedblright,
quoteleft,
quoteright,
divide,
lozenge,
ydieresis,
Ydieresis,
fraction,
currency,
guilsinglleft,
guilsinglright,
fi,
fl,
daggerdbl,
periodcentered,
quotesinglbase,
quotedblbase,
perthousand,
Acircumflex,
Ecircumflex,
Aacute,
Edieresis,
Egrave,
Iacute,
Icircumflex,
Idieresis,
Igrave,
Oacute,
Ocircumflex,
apple,
Ograve,
Uacute,
Ucircumflex,
Ugrave,
dotlessi,
circumflex,
tilde,
macron,
breve,
dotaccent,
ring,
cedilla,
hungarumlaut,
ogonek,
caron,
Lslash,
lslash,
Scaron,
scaron,
Zcaron,
zcaron,
brokenbar,
Eth,
eth,
Yacute,
yacute,
Thorn,
thorn,
minus,
multiply,
onesuperior,
twosuperior,
threesuperior,
onehalf,
onequarter,
threequarters,
franc,
Gbreve,
gbreve,
Idot,
Scedilla,
scedilla,
Cacute,
cacute,
Ccaron,
ccaron,
dmacron,
overscore,
middot,
foursuperior,
commaaccent
);
}
);
date = "1992-05-13 08:47:14 +0000";
familyName = "ABN Condensed";
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 1491;
},
{
name = typoDescender;
value = -431;
},
{
name = typoLineGap;
value = 269;
},
{
name = winAscent;
value = 1854;
},
{
name = winDescent;
value = 434;
},
{
name = hheaAscender;
value = 1854;
},
{
name = hheaDescender;
value = -434;
},
{
name = strikeoutPosition;
value = 530;
},
{
name = strikeoutSize;
value = 102;
},
{
name = "prep Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */\012563 \012PUSHB[ ]	/* 3 values pushed */\012103 78 31 \012PUSHW[ ]	/* 1 value pushed */\012564 \012NPUSHB[ ]	/* 15 values pushed */\012103 78 31 32 238 48 238 64 238 80 238 4 176 132 1 \012NPUSHW[ ]	/* 14 values pushed */\012640 639 51 31 642 639 51 31 641 639 51 31 636 635 \012PUSHB[ ]	/* 3 values pushed */\01262 31 64 \012NPUSHW[ ]	/* 15 values pushed */\012635 80 635 208 635 3 80 635 96 635 112 635 3 679 623 \012PUSHB[ ]	/* 3 values pushed */\012200 31 79 \012NPUSHW[ ]	/* 18 values pushed */\012623 95 623 111 623 127 623 4 191 623 1 47 618 1 47 618 1 672 \012PUSHB[ ]	/* 3 values pushed */\012103 200 31 \012PUSHW[ ]	/* 2 values pushed */\012616 615 \012PUSHB[ ]	/* 3 values pushed */\01260 31 160 \012NPUSHW[ ]	/* 9 values pushed */\012615 1 47 615 1 47 615 1 648 \012PUSHB[ ]	/* 3 values pushed */\012117 150 31 \012PUSHW[ ]	/* 1 value pushed */\012608 \012PUSHB[ ]	/* 4 values pushed */\012111 150 31 15 \012PUSHW[ ]	/* 6 values pushed */\012599 175 599 2 111 599 \012NPUSHB[ ]	/* 156 values pushed */\0121 5 3 60 31 4 2 60 31 9 0 5 16 5 32 5 3 0 3 16 3 32 3 3 0 1 16 1 32 1 3 15 13 31 13 47 13 3 15 9 31 9 47 9 3 15 11 31 11 47 11 3 61 15 0 15 1 15 2 15 3 15 16 15 17 79 0 79 1 79 2 79 3 79 16 79 17 127 0 127 1 127 2 127 3 127 16 127 17 191 0 191 1 191 2 191 3 191 16 191 17 239 0 239 1 239 2 239 3 239 16 239 17 30 15 6 15 7 31 6 31 7 4 63 6 63 7 95 6 95 7 127 6 127 7 159 6 159 7 175 6 175 7 191 6 191 7 223 6 223 7 255 6 255 7 16 \012PUSHW[ ]	/* 1 value pushed */\012351 \012PUSHB[ ]	/* 3 values pushed */\012173 5 31 \012NPUSHW[ ]	/* 11 values pushed */\012351 173 -14 5 22 394 489 5 31 394 489 \012NPUSHB[ ]	/* 9 values pushed */\01257 5 22 203 139 24 31 203 139 \012NPUSHW[ ]	/* 10 values pushed */\012-69 24 22 312 311 23 31 312 311 721 \012NPUSHB[ ]	/* 12 values pushed */\01223 22 0 70 70 0 0 0 18 17 8 64 \012PUSHW[ ]	/* 4 values pushed */\012541 0 9 480 \012PUSHB[ ]	/* 3 values pushed */\012106 22 31 \012PUSHW[ ]	/* 1 value pushed */\012477 \012PUSHB[ ]	/* 3 values pushed */\012106 34 31 \012PUSHW[ ]	/* 1 value pushed */\012473 \012PUSHB[ ]	/* 3 values pushed */\012106 96 31 \012PUSHW[ ]	/* 5 values pushed */\012468 103 444 31 454 \012PUSHB[ ]	/* 4 values pushed */\01290 166 21 22 \012PUSHW[ ]	/* 1 value pushed */\012452 \012PUSHB[ ]	/* 4 values pushed */\01290 158 20 22 \012PUSHW[ ]	/* 1 value pushed */\012374 \012PUSHB[ ]	/* 3 values pushed */\012106 89 31 \012NPUSHW[ ]	/* 27 values pushed */\012373 106 267 31 372 106 666 31 370 157 666 31 369 157 666 31 364 90 499 61 22 360 90 291 36 22 356 \012PUSHB[ ]	/* 4 values pushed */\01290 158 20 22 \012PUSHW[ ]	/* 1 value pushed */\012355 \012PUSHB[ ]	/* 4 values pushed */\01290 158 20 22 \012PUSHW[ ]	/* 1 value pushed */\012354 \012PUSHB[ ]	/* 4 values pushed */\01290 133 17 22 \012PUSHW[ ]	/* 1 value pushed */\012292 \012PUSHB[ ]	/* 4 values pushed */\01290 158 20 22 \012PUSHW[ ]	/* 1 value pushed */\012290 \012PUSHB[ ]	/* 4 values pushed */\01290 116 15 22 \012PUSHW[ ]	/* 1 value pushed */\012266 \012PUSHB[ ]	/* 3 values pushed */\012106 84 31 \012NPUSHW[ ]	/* 22 values pushed */\012264 103 5777 666 22 262 298 666 31 261 90 790 96 22 260 90 549 67 22 258 90 266 \012PUSHB[ ]	/* 4 values pushed */\01233 22 241 90 \012PUSHW[ ]	/* 1 value pushed */\012790 \012PUSHB[ ]	/* 4 values pushed */\01296 22 240 90 \012PUSHW[ ]	/* 1 value pushed */\012441 \012NPUSHB[ ]	/* 14 values pushed */\01254 22 239 90 200 25 22 238 90 141 18 22 194 90 \012PUSHW[ ]	/* 2 values pushed */\0122211 267 \012PUSHB[ ]	/* 3 values pushed */\01222 193 90 \012PUSHW[ ]	/* 1 value pushed */\012690 \012PUSHB[ ]	/* 4 values pushed */\01284 22 192 90 \012PUSHW[ ]	/* 1 value pushed */\012474 \012PUSHB[ ]	/* 4 values pushed */\01258 22 183 90 \012PUSHW[ ]	/* 1 value pushed */\012666 \012PUSHB[ ]	/* 8 values pushed */\01231 182 90 216 27 22 170 90 \012PUSHW[ ]	/* 1 value pushed */\012914 \012NPUSHB[ ]	/* 9 values pushed */\012111 22 168 90 158 20 22 161 90 \012PUSHW[ ]	/* 7 values pushed */\0122211 267 22 156 298 11147 1332 \012PUSHB[ ]	/* 3 values pushed */\01222 155 90 \012PUSHW[ ]	/* 1 value pushed */\012391 \012PUSHB[ ]	/* 4 values pushed */\01248 22 133 90 \012PUSHW[ ]	/* 1 value pushed */\012690 \012PUSHB[ ]	/* 4 values pushed */\01284 22 121 103 \012PUSHW[ ]	/* 1 value pushed */\0121332 \012PUSHB[ ]	/* 8 values pushed */\01231 120 90 175 22 22 115 90 \012PUSHW[ ]	/* 1 value pushed */\012316 \012PUSHB[ ]	/* 4 values pushed */\01239 22 107 90 \012PUSHW[ ]	/* 2 values pushed */\0125528 666 \012PUSHB[ ]	/* 3 values pushed */\01222 100 103 \012PUSHW[ ]	/* 1 value pushed */\012444 \012PUSHB[ ]	/* 6 values pushed */\01231 94 90 208 26 22 \012PUSHW[ ]	/* 1 value pushed */\012481 \012PUSHB[ ]	/* 3 values pushed */\012111 12 31 \012PUSHW[ ]	/* 1 value pushed */\012476 \012PUSHB[ ]	/* 3 values pushed */\012111 16 31 \012PUSHW[ ]	/* 1 value pushed */\012471 \012PUSHB[ ]	/* 3 values pushed */\012111 26 31 \012NPUSHW[ ]	/* 11 values pushed */\012459 91 532 74 22 457 91 342 48 22 367 \012PUSHB[ ]	/* 3 values pushed */\012111 74 31 \012PUSHW[ ]	/* 1 value pushed */\012366 \012PUSHB[ ]	/* 3 values pushed */\012111 111 31 \012PUSHW[ ]	/* 1 value pushed */\012297 \012PUSHB[ ]	/* 3 values pushed */\012111 74 31 \012PUSHW[ ]	/* 1 value pushed */\012296 \012PUSHB[ ]	/* 3 values pushed */\012111 103 31 \012PUSHW[ ]	/* 8 values pushed */\012259 111 5029 666 22 257 91 437 \012NPUSHB[ ]	/* 13 values pushed */\01261 22 242 111 25 31 237 91 167 24 22 218 91 \012PUSHW[ ]	/* 1 value pushed */\012437 \012PUSHB[ ]	/* 8 values pushed */\01261 22 147 111 35 31 146 91 \012PUSHW[ ]	/* 2 values pushed */\0124842 666 \012PUSHB[ ]	/* 3 values pushed */\01222 138 105 \012PUSHW[ ]	/* 1 value pushed */\0121332 \012PUSHB[ ]	/* 3 values pushed */\01231 137 91 \012PUSHW[ ]	/* 1 value pushed */\012437 \012PUSHB[ ]	/* 4 values pushed */\01261 22 128 105 \012PUSHW[ ]	/* 1 value pushed */\012666 \012PUSHB[ ]	/* 3 values pushed */\01231 127 91 \012PUSHW[ ]	/* 1 value pushed */\012510 \012PUSHB[ ]	/* 8 values pushed */\01271 22 117 111 40 31 116 105 \012PUSHW[ ]	/* 1 value pushed */\0121332 \012PUSHB[ ]	/* 3 values pushed */\01231 101 91 \012PUSHW[ ]	/* 1 value pushed */\012437 \012NPUSHB[ ]	/* 9 values pushed */\01261 22 70 3 70 4 70 11 47 \012PUSHW[ ]	/* 1 value pushed */\012541 \012NPUSHB[ ]	/* 69 values pushed */\0121 85 24 9 24 9 144 221 7 144 197 7 144 123 7 144 113 7 144 99 7 144 93 7 144 86 7 144 85 7 36 8 34 8 32 8 30 8 28 8 26 8 24 8 22 8 20 8 18 8 16 8 14 8 12 8 10 8 8 8 6 8 4 8 2 8 0 8 0 \012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\012192 \012MUL[ ]	/* Multiply */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012246 \012GTEQ[ ]	/* GreaterThanOrEqual */\012SWAP[ ]	/* SwapTopStack */\012PUSHW[ ]	/* 1 value pushed */\012266 \012LTEQ[ ]	/* LessThenOrEqual */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012WS[ ]	/* WriteStore */\012RTG[ ]	/* RoundToGrid */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SPVTCA[1]	/* SetPVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012SPVTCA[0]	/* SetPVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01256 \012CALL[ ]	/* CallFunction */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GT[ ]	/* GreaterThan */\012PUSHB[ ]	/* 1 value pushed */\01255 \012CALL[ ]	/* CallFunction */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LT[ ]	/* LessThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01256 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0122 \012GETINFO[ ]	/* GetInfo */\012PUSHW[ ]	/* 1 value pushed */\012256 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012281 \012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012SCANCTRL[ ]	/* ScanConversionControl */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01218 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0121 311 \012SCANCTRL[ ]	/* ScanConversionControl */\012SCANTYPE[ ]	/* ScanType */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0121 511 \012SCANCTRL[ ]	/* ScanConversionControl */\012SCANTYPE[ ]	/* ScanType */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012SZPS[ ]	/* SetZonePointerS */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012RTG[ ]	/* RoundToGrid */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LT[ ]	/* LessThan */\012JROF[ ]	/* JumpRelativeOnFalse */\012PUSHW[ ]	/* 5 values pushed */\01231 376 7 31 352 \012PUSHB[ ]	/* 7 values pushed */\0127 31 216 7 31 104 7 \012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012JROF[ ]	/* JumpRelativeOnFalse */\012PUSHW[ ]	/* 5 values pushed */\012144 376 7 144 352 \012PUSHB[ ]	/* 7 values pushed */\0127 144 216 7 144 104 7 \012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012RTG[ ]	/* RoundToGrid */\012SCVTCI[ ]	/* SetCVTCutIn */\012PUSHB[ ]	/* 1 value pushed */\012150 \012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012170 \012SCVTCI[ ]	/* SetCVTCutIn */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01250 \012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012255 \012SCVTCI[ ]	/* SetCVTCutIn */\012EIF[ ]	/* EndIf */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\012103 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\012543 541 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHW[ ]	/* 2 values pushed */\012542 541 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\012854 543 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\012543 854 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\012122 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\012103 542 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHW[ ]	/* 2 values pushed */\012106 542 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0121059 103 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\012103 1059 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012333 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01290 543 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHW[ ]	/* 2 values pushed */\012112 543 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0122770 90 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01290 2770 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012666 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\012298 112 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\012112 112 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0125611 298 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\012298 5611 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0121332 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\012157 112 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\012112 112 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01211230 157 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\012157 11230 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\012148 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01291 91 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\012111 91 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0121070 91 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01291 1070 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012333 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01291 91 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\012105 91 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0122417 91 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01291 2417 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012666 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01291 91 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01291 91 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0124842 91 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01291 4842 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WCVTF[ ]	/* WriteCVTInFUnits */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012499 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 3 values pushed */\01270 33 70 \012RCVT[ ]	/* ReadCVT */\012MAX[ ]	/* Maximum */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012999 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 3 values pushed */\01270 97 70 \012RCVT[ ]	/* ReadCVT */\012MAX[ ]	/* Maximum */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\012106 103 70 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTF[ ]	/* WriteCVTInFUnits */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012499 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 3 values pushed */\01270 33 70 \012RCVT[ ]	/* ReadCVT */\012MAX[ ]	/* Maximum */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012999 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 3 values pushed */\01270 97 70 \012RCVT[ ]	/* ReadCVT */\012MAX[ ]	/* Maximum */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\012112 90 70 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTF[ ]	/* WriteCVTInFUnits */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012499 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 3 values pushed */\01270 33 70 \012RCVT[ ]	/* ReadCVT */\012MAX[ ]	/* Maximum */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012999 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 3 values pushed */\01270 97 70 \012RCVT[ ]	/* ReadCVT */\012MAX[ ]	/* Maximum */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\012157 298 70 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01297 200 119 139 \012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\012139 \012SROUND[ ]	/* SuperRound */\012ROUND[00]	/* Round */\012RTG[ ]	/* RoundToGrid */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\012119 200 \012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012ADD[ ]	/* Add */\012DIV[ ]	/* Divide */\012MUL[ ]	/* Multiply */\012ROUND[00]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\012200 \012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\012119 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\01297 139 \012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012ADD[ ]	/* Add */\012DIV[ ]	/* Divide */\012MUL[ ]	/* Multiply */\012ROUND[00]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\012139 \012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\01297 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\0120 139 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\012139 64 \012NEG[ ]	/* Negate */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\01297 64 97 \012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\012109 158 96 174 \012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\012137 \012SROUND[ ]	/* SuperRound */\012ROUND[00]	/* Round */\012RTG[ ]	/* RoundToGrid */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\01296 158 \012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012ADD[ ]	/* Add */\012DIV[ ]	/* Divide */\012MUL[ ]	/* Multiply */\012ROUND[00]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\012158 \012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\01296 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\012109 174 \012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012ADD[ ]	/* Add */\012DIV[ ]	/* Divide */\012MUL[ ]	/* Multiply */\012ROUND[00]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\012174 \012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\012109 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\0120 174 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\012174 64 \012NEG[ ]	/* Negate */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\012109 64 109 \012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012GTEQ[ ]	/* GreaterThanOrEqual */\012WS[ ]	/* WriteStore */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0128 0 \012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012RS[ ]	/* ReadStore */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0128 0 \012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0122 11 10 18 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012SZPS[ ]	/* SetZonePointerS */\012SRP0[ ]	/* SetRefPoint0 */\012WCVTF[ ]	/* WriteCVTInFUnits */\012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01215137 6270 \012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 3 values pushed */\0121024 424 11 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01218 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01211585 11585 \012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 3 values pushed */\0121024 1024 11 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01218 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0126270 15137 \012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 3 values pushed */\012424 1024 11 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012SDB[ ]	/* SetDeltaBaseInGState */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012SDB[ ]	/* SetDeltaBaseInGState */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012DELTAC3[ ]	/* DeltaExceptionC3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC3[ ]	/* DeltaExceptionC3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012DELTAC3[ ]	/* DeltaExceptionC3 */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012PUSHW[ ]	/* 1 value pushed */\012670 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012PUSHB[ ]	/* 1 value pushed */\01264 \012MAX[ ]	/* Maximum */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012PUSHW[ ]	/* 1 value pushed */\012671 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012PUSHB[ ]	/* 1 value pushed */\01264 \012MAX[ ]	/* Maximum */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01234 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */";
},
{
name = "fpgm Table Assembly";
value = "NPUSHB[ ]	/* 55 values pushed */\01256 55 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SCFS[ ]	/* SetCoordFromStackFP */\012SCFS[ ]	/* SetCoordFromStackFP */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SCFS[ ]	/* SetCoordFromStackFP */\012SCFS[ ]	/* SetCoordFromStackFP */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01270 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SCFS[ ]	/* SetCoordFromStackFP */\012SCFS[ ]	/* SetCoordFromStackFP */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SCFS[ ]	/* SetCoordFromStackFP */\012SCFS[ ]	/* SetCoordFromStackFP */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01264 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012102 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SCFS[ ]	/* SetCoordFromStackFP */\012SCFS[ ]	/* SetCoordFromStackFP */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01264 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SCFS[ ]	/* SetCoordFromStackFP */\012SCFS[ ]	/* SetCoordFromStackFP */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012SRP0[ ]	/* SetRefPoint0 */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012205 \012WCVTP[ ]	/* WriteCVTInPixels */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\012346 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012141 \012WCVTP[ ]	/* WriteCVTInPixels */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012237 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01277 \012WCVTP[ ]	/* WriteCVTInPixels */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012WCVTP[ ]	/* WriteCVTInPixels */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RTG[ ]	/* RoundToGrid */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01270 \012SROUND[ ]	/* SuperRound */\012ROUND[00]	/* Round */\012ROLL[ ]	/* RollTopThreeStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01211 10 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012NEG[ ]	/* Negate */\012SPVFS[ ]	/* SetPVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01210 11 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01270 \012SWAP[ ]	/* SwapTopStack */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0121 70 \012MIAP[0]	/* MoveIndirectAbsPt */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01270 \012SWAP[ ]	/* SwapTopStack */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0122 70 \012RCVT[ ]	/* ReadCVT */\012MSIRP[0]	/* MoveStackIndirRelPt */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SFVTL[0]	/* SetFVectorToLine */\012GFV[ ]	/* GetFVector */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01274 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01273 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012NEG[ ]	/* Negate */\012SPVFS[ ]	/* SetPVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[01]	/* Round */\012PUSHB[ ]	/* 1 value pushed */\01264 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MAX[ ]	/* Maximum */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\01244 192 \012ROLL[ ]	/* RollTopThreeStack */\012MIN[ ]	/* Minimum */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012CALL[ ]	/* CallFunction */\012GPV[ ]	/* GetPVector */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01271 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\01271 \012ROFF[ ]	/* RoundOff */\012MIRP[00100]	/* MoveIndirectRelPt */\012RTG[ ]	/* RoundToGrid */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\012422 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012PUSHW[ ]	/* 1 value pushed */\012256 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01274 -128 \012PUSHB[ ]	/* 2 values pushed */\01273 128 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SDPVTL[1]	/* SetDualPVectorToLine */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01271 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\01271 \012ROFF[ ]	/* RoundOff */\012MIRP[00100]	/* MoveIndirectRelPt */\012ELSE[ ]	/* Else */\012SPVTCA[1]	/* SetPVectorToAxis */\012ROLL[ ]	/* RollTopThreeStack */\012RCVT[ ]	/* ReadCVT */\012RTG[ ]	/* RoundToGrid */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01271 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SDPVTL[1]	/* SetDualPVectorToLine */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012160 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01271 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\01271 \012ROFF[ ]	/* RoundOff */\012MIRP[00100]	/* MoveIndirectRelPt */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01271 \012ROFF[ ]	/* RoundOff */\012MIRP[00100]	/* MoveIndirectRelPt */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012RTG[ ]	/* RoundToGrid */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012MIN[ ]	/* Minimum */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012RTG[ ]	/* RoundToGrid */\012MDAP[1]	/* MoveDirectAbsPt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01273 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01274 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ROUND[10]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ROUND[00]	/* Round */\012ROLL[ ]	/* RollTopThreeStack */\012ROUND[10]	/* Round */\012ADD[ ]	/* Add */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01226 \012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012JROF[ ]	/* JumpRelativeOnFalse */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\01226 74 64 \012PUSHW[ ]	/* 2 values pushed */\012-32 74 \012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01263 \012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012JMPR[ ]	/* Jump */\012PUSHB[ ]	/* 2 values pushed */\01220 0 \012ROLL[ ]	/* RollTopThreeStack */\012GT[ ]	/* GreaterThan */\012JROF[ ]	/* JumpRelativeOnFalse */\012PUSHB[ ]	/* 4 values pushed */\01273 64 32 73 \012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01263 \012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01216 17 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01214 15 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01212 13 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01212 13 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012NEG[ ]	/* Negate */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01214 15 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012NEG[ ]	/* Negate */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01216 17 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012NEG[ ]	/* Negate */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012NEG[ ]	/* Negate */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012ROLL[ ]	/* RollTopThreeStack */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ROLL[ ]	/* RollTopThreeStack */\012SRP0[ ]	/* SetRefPoint0 */\012MSIRP[0]	/* MoveStackIndirRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SRP0[ ]	/* SetRefPoint0 */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012MIRP[10101]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MIRP[01101]	/* MoveIndirectRelPt */\012MIRP[01100]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SRP0[ ]	/* SetRefPoint0 */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012MIRP[10101]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012MIRP[01101]	/* MoveIndirectRelPt */\012MIRP[01100]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012SRP0[ ]	/* SetRefPoint0 */\012MIRP[10101]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MIRP[01101]	/* MoveIndirectRelPt */\012MIRP[01100]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012SRP0[ ]	/* SetRefPoint0 */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012SRP0[ ]	/* SetRefPoint0 */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01242 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01242 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SHC[1]	/* ShiftContourByLastPt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SROUND[ ]	/* SuperRound */\012PUSHB[ ]	/* 1 value pushed */\01275 \012SWAP[ ]	/* SwapTopStack */\012WCVTF[ ]	/* WriteCVTInFUnits */\012SRP0[ ]	/* SetRefPoint0 */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01275 \012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012MSIRP[0]	/* MoveStackIndirRelPt */\012MDAP[1]	/* MoveDirectAbsPt */\012RTG[ ]	/* RoundToGrid */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012GPV[ ]	/* GetPVector */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012ABS[ ]	/* Absolute */\012MAX[ ]	/* Maximum */\012PUSHW[ ]	/* 1 value pushed */\01216384 \012DIV[ ]	/* Divide */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012GPV[ ]	/* GetPVector */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012ABS[ ]	/* Absolute */\012MAX[ ]	/* Maximum */\012PUSHW[ ]	/* 1 value pushed */\0128192 \012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0120 64 47 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012GPV[ ]	/* GetPVector */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012ABS[ ]	/* Absolute */\012MAX[ ]	/* Maximum */\012PUSHW[ ]	/* 1 value pushed */\0125461 \012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0120 128 47 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012GPV[ ]	/* GetPVector */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012ABS[ ]	/* Absolute */\012MAX[ ]	/* Maximum */\012PUSHW[ ]	/* 1 value pushed */\01216384 \012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 5 values pushed */\0120 1 0 0 0 \012SZP2[ ]	/* SetZonePointer2 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012ISECT[ ]	/* MovePtToIntersect */\012SRP0[ ]	/* SetRefPoint0 */\012SZPS[ ]	/* SetZonePointerS */\012SZP0[ ]	/* SetZonePointer0 */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012MSIRP[0]	/* MoveStackIndirRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 5 values pushed */\0120 1 0 0 0 \012SZP2[ ]	/* SetZonePointer2 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012ISECT[ ]	/* MovePtToIntersect */\012SRP0[ ]	/* SetRefPoint0 */\012SZPS[ ]	/* SetZonePointerS */\012SZP0[ ]	/* SetZonePointer0 */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012NEG[ ]	/* Negate */\012MSIRP[0]	/* MoveStackIndirRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0124 5 \012CINDEX[ ]	/* CopyXToTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012ROLL[ ]	/* RollTopThreeStack */\012MAX[ ]	/* Maximum */\012ELSE[ ]	/* Else */\012MINDEX[ ]	/* MoveXToTopStack */\012ADD[ ]	/* Add */\012ROLL[ ]	/* RollTopThreeStack */\012MIN[ ]	/* Minimum */\012EIF[ ]	/* EndIf */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\012-128 \012DIV[ ]	/* Divide */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012SRP0[ ]	/* SetRefPoint0 */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 2 values pushed */\01275 75 \012ROLL[ ]	/* RollTopThreeStack */\012WCVTF[ ]	/* WriteCVTInFUnits */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\012-256 \012MAX[ ]	/* Maximum */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 1 value pushed */\012256 \012MIN[ ]	/* Minimum */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012ADD[ ]	/* Add */\012ROUND[00]	/* Round */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MSIRP[0]	/* MoveStackIndirRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01242 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SPVTCA[1]	/* SetPVectorToAxis */\012ELSE[ ]	/* Else */\012SPVTCA[0]	/* SetPVectorToAxis */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SPVTCA[0]	/* SetPVectorToAxis */\012ELSE[ ]	/* Else */\012SPVTCA[1]	/* SetPVectorToAxis */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    1466,\012    25,\012    1466,\012    25,\012    1454,\012    25,\012    1062,\012    24,\012    0,\012    \"-25\",\012    0,\012    \"-25\",\012    0,\012    \"-25\",\012    \"-407\",\012    \"-24\",\012    1466,\012    25,\012    \"-413\",\012    \"-18\",\012    744,\012    0,\012    1491,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    \"-1\",\012    \"-1\",\012    \"-1\",\012    \"-1\",\012    \"-1\",\012    \"-1\",\012    \"-1\",\012    \"-1\",\012    \"-1\",\012    \"-1\",\012    \"-1\",\012    \"-1\",\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    \"-1\",\012    \"-1\",\012    \"-1\",\012    269,\012    0,\012    269,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    212,\012    127,\012    33,\012    64,\012    \"-36\",\012    266,\012    233,\012    87,\012    186,\012    214,\012    145,\012    84,\012    148,\012    174,\012    204,\012    281,\012    211,\012    11,\012    278,\012    207,\012    237,\012    289,\012    264,\012    \"-66\",\012    127,\012    211,\012    242,\012    270,\012    319,\012    0,\012    231,\012    238,\012    276,\012    0,\012    96,\012    203,\012    279,\012    28,\012    301,\012    3,\012    14,\012    114,\012    214,\012    237,\012    145,\012    4,\012    46,\012    155,\012    250,\012    931,\012    24,\012    139,\012    211,\012    238,\012    \"-97\",\012    \"-4\",\012    0,\012    39,\012    45,\012    88,\012    143,\012    231,\012    281,\012    895,\012    \"-211\",\012    \"-146\",\012    18,\012    25,\012    135,\012    162,\012    238,\012    267,\012    271,\012    \"-117\",\012    65,\012    75,\012    261,\012    506,\012    780,\012    59,\012    117,\012    119,\012    193,\012    198,\012    239,\012    254,\012    545,\012    962,\012    \"-120\",\012    \"-85\",\012    1,\012    27,\012    30,\012    55,\012    95,\012    131,\012    154,\012    216,\012    266,\012    \"-81\",\012    16,\012    28,\012    37,\012    46,\012    87,\012    105,\012    122,\012    243,\012    250,\012    261,\012    327,\012    458,\012    615,\012    964,\012    \"-154\",\012    \"-149\",\012    \"-94\",\012    \"-42\",\012    \"-41\",\012    6,\012    24,\012    38,\012    56,\012    73,\012    73,\012    74,\012    81,\012    87,\012    105,\012    135,\012    149,\012    193,\012    197,\012    211,\012    237,\012    342,\012    495,\012    816,\012    874,\012    \"-73\",\012    \"-59\",\012    11,\012    55,\012    56,\012    70,\012    113,\012    130,\012    146,\012    146,\012    148,\012    158,\012    166,\012    177,\012    190,\012    211,\012    241,\012    252,\012    296,\012    392,\012    1136,\012    3,\012    31,\012    52,\012    58,\012    71,\012    80,\012    91,\012    103,\012    111,\012    114,\012    164,\012    188,\012    211,\012    225,\012    240,\012    246,\012    252,\012    268,\012    275,\012    276,\012    278,\012    305,\012    324,\012    326,\012    555,\012    627,\012    763,\012    12,\012    38,\012    40,\012    55,\012    60,\012    63,\012    65,\012    78,\012    95,\012    102,\012    106,\012    116,\012    117,\012    140,\012    155,\012    161,\012    167,\012    169,\012    177,\012    178,\012    197,\012    206,\012    213,\012    253,\012    255,\012    260,\012    268,\012    383,\012    398,\012    401,\012    408,\012    533,\012    591,\012    836,\012    855,\012    883,\012    900,\012    922,\012    1024,\012    1048,\012    1106,\012    1121,\012    1517,\012    \"-336\",\012    \"-235\",\012    \"-55\",\012    12,\012    18,\012    23,\012    24,\012    32,\012    32,\012    33,\012    44,\012    57,\012    64,\012    65,\012    66,\012    67,\012    75,\012    97,\012    102,\012    110,\012    118,\012    120,\012    130,\012    134,\012    134,\012    135,\012    136,\012    145,\012    146,\012    146,\012    150,\012    152,\012    154,\012    158,\012    160,\012    169,\012    179,\012    181,\012    182,\012    185,\012    197,\012    198,\012    204,\012    206,\012    208,\012    229,\012    235,\012    239,\012    242,\012    244,\012    253,\012    254,\012    260,\012    269,\012    271,\012    273,\012    274,\012    289,\012    294,\012    304,\012    312,\012    320,\012    339,\012    364,\012    392,\012    419,\012    445,\012    450,\012    452,\012    522,\012    526,\012    552,\012    552,\012    571,\012    583,\012    606,\012    616,\012    617,\012    709,\012    725,\012    738,\012    755,\012    776,\012    794,\012    822,\012    866,\012    904,\012    920,\012    991,\012    1066,\012    1082,\012    1200,\012    1266,\012    1324,\012    1346,\012    1449,\012    1532,\012    \"-387\",\012    \"-314\",\012    \"-256\",\012    \"-114\",\012    \"-71\",\012    \"-31\",\012    \"-31\",\012    1,\012    7,\012    12,\012    25,\012    31,\012    35,\012    44,\012    44,\012    50,\012    67,\012    71,\012    80,\012    81,\012    88,\012    91,\012    96,\012    99,\012    100,\012    103,\012    112,\012    114,\012    121,\012    124,\012    127,\012    129,\012    133,\012    138,\012    146,\012    152,\012    159,\012    165,\012    169,\012    171,\012    199,\012    201,\012    202,\012    202,\012    203,\012    205,\012    206,\012    215,\012    220,\012    221,\012    223,\012    231,\012    256,\012    256,\012    268,\012    275,\012    281,\012    285,\012    289,\012    295,\012    300,\012    303,\012    306,\012    314,\012    329,\012    329,\012    333,\012    341,\012    351,\012    353,\012    370,\012    384,\012    387,\012    408,\012    424,\012    428,\012    453,\012    455,\012    483,\012    550,\012    559,\012    566,\012    568,\012    583,\012    591,\012    617,\012    642,\012    667,\012    671,\012    687,\012    691,\012    720,\012    741,\012    758,\012    798,\012    802,\012    804,\012    833,\012    836,\012    854,\012    960,\012    994,\012    1005,\012    1013,\012    1047,\012    1127,\012    1148,\012    1158,\012    1226,\012    1280,\012    1308,\012    1353,\012    1377,\012    1380,\012    1403,\012    1461,\012    1466,\012    1493,\012    1495,\012    1538,\012    1581,\012    1614,\012    1647,\012    1706,\012    1720,\012    1873,\012    1971,\012    2048,\012    2083,\012    268,\012    280,\012    267,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    254,\012    190,\012    122,\012    157,\012    148,\012    151,\012    62,\012    89,\012    550,\012    489,\012    308,\012    356,\012    307,\012    335,\012    43,\012    941,\012    91,\012    375,\012    851,\012    324,\012    429,\012    541,\012    808,\012    132,\012    153,\012    243,\012    192,\012    189,\012    421,\012    239,\012    198,\012    53,\012    383,\012    427,\012    459,\012    121,\012    230,\012    279,\012    249,\012    281,\012    389,\012    518,\012    178,\012    208,\012    205,\012    256,\012    227,\012    3,\012    203,\012    177,\012    747,\012    519,\012    198,\012    277,\012    260,\012    228,\012    101,\012    242,\012    238,\012    176,\012    317,\012    770,\012    774,\012    1,\012    261,\012    276,\012    209,\012    258,\012    310,\012    298,\012    409,\012    876,\012    148,\012    208,\012    127,\012    394,\012    809,\012    884,\012    847,\012    225,\012    377,\012    366,\012    276,\012    366,\012    247,\012    226,\012    1532,\012    419,\012    151,\012    143,\012    176,\012    162,\012    494,\012    362,\012    511,\012    460,\012    472,\012    276,\012    166,\012    472,\012    243,\012    144,\012    2,\012    108,\012    130,\012    40,\012    546,\012    120,\012    285,\012    107,\012    107,\012    39,\012    300,\012    176,\012    40,\012    \"-343\",\012    242,\012    255,\012    149,\012    88,\012    135,\012    266,\012    46,\012    71,\012    134,\012    847,\012    225,\012    770,\012    148,\012    1532,\012    151,\012    177,\012    698,\012    59\012)";
}
);
id = m01;
metricValues = (
{
pos = 1491;
},
{
},
{
pos = -431;
},
{
}
);
name = Bold;
}
);
glyphs = (
{
glyphname = .notdef;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1280,1280,l),
(256,1280,l),
(256,0,l),
(1280,0,l)
);
},
{
closed = 1;
nodes = (
(288,32,l),
(288,1248,l),
(1248,1248,l),
(1248,32,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 4 
PUSHW[ ]	/* 1 value pushed */
323 
PUSHB[ ]	/* 3 values pushed */
0 6 7 
PUSHW[ ]	/* 4 values pushed */
323 2 1 521 
PUSHB[ ]	/* 6 values pushed */
3 3 0 10 6 5 
PUSHW[ ]	/* 1 value pushed */
322 
PUSHB[ ]	/* 7 values pushed */
3 3 2 74 9 7 4 
PUSHW[ ]	/* 1 value pushed */
322 
PUSHB[ ]	/* 5 values pushed */
1 0 73 8 219 
PUSHW[ ]	/* 2 values pushed */
414 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[10101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[10101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 1536;
}
);
note = ".notdef";
},
{
glyphname = space;
layers = (
{
layerId = m01;
width = 512;
}
);
note = space;
unicode = 32;
},
{
glyphname = exclam;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,384,l),
(403,384,l),
(482,1129,l),
(482,1466,l),
(201,1466,l),
(201,1129,l)
);
},
{
closed = 1;
nodes = (
(472,0,l),
(472,276,l),
(211,276,l),
(211,0,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 2 values pushed */
4 334 
PUSHB[ ]	/* 5 values pushed */
6 0 0 7 6 
PUSHW[ ]	/* 1 value pushed */
616 
NPUSHB[ ]	/* 43 values pushed */
8 9 10 111 3 127 3 143 3 159 3 175 3 5 3 249 1 96 4 112 4 128 4 144 4 160 4 5 4 249 0 2 1 130 8 5 0 130 6 7 8 6 8 
PUSHW[ ]	/* 1 value pushed */
615 
NPUSHB[ ]	/* 15 values pushed */
175 9 192 9 2 32 9 48 9 64 9 80 9 4 9 
PUSHW[ ]	/* 1 value pushed */
292 
PUSHB[ ]	/* 4 values pushed */
10 110 149 24 
CALL[ ]	/* CallFunction */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
MIRP[01101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01110]	/* MoveIndirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 683;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = quotedbl;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,944,l),
(264,944,l),
(314,1225,l),
(314,1466,l),
(28,1466,l),
(28,1225,l)
);
},
{
closed = 1;
nodes = (
(419,944,l),
(604,944,l),
(655,1225,l),
(655,1466,l),
(368,1466,l),
(368,1225,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 10 
PUSHW[ ]	/* 1 value pushed */
384 
NPUSHB[ ]	/* 29 values pushed */
6 6 1 0 4 188 5 3 188 2 10 188 11 9 188 8 8 32 7 48 7 64 7 3 7 100 6 6 11 
PUSHW[ ]	/* 1 value pushed */
656 
NPUSHB[ ]	/* 28 values pushed */
2 0 47 5 63 5 79 5 3 5 100 1 16 2 32 2 48 2 64 2 4 2 2 1 2 87 89 24 
CALL[ ]	/* CallFunction */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11110]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 683;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = dollar;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(862,1344,o),
(750,1462,o),
(564,1483,c),
(564,1579,l),
(435,1579,l),
(435,1483,l),
(207,1455,o),
(101,1305,o),
(101,1118,cs),
(101,940,o),
(212,787,o),
(435,659,c),
(435,202,l),
(365,227,o),
(322,303,o),
(307,429,c),
(60,399,l),
(85,135,o),
(210,-6,o),
(435,-25,c),
(435,-209,l),
(564,-209,l),
(564,-25,l),
(801,-4,o),
(947,185,o),
(947,386,cs),
(947,551,o),
(876,668,o),
(564,856,c),
(564,1256,l),
(615,1229,o),
(646,1177,o),
(657,1098,c),
(900,1130,l)
);
},
{
closed = 1;
nodes = (
(338,1190,o),
(370,1237,o),
(435,1270,c),
(435,949,l),
(370,1008,o),
(338,1067,o),
(338,1127,cs)
);
},
{
closed = 1;
nodes = (
(564,579,l),
(656,518,o),
(701,449,o),
(701,373,cs),
(701,278,o),
(655,220,o),
(564,199,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
95 41 1 45 2 58 2 74 2 92 2 4 5 6 7 22 24 38 41 20 105 28 121 28 217 33 213 38 8 4 11 26 32 5 33 32 5 12 25 39 20 38 11 26 19 20 38 12 25 33 29 19 18 4 12 39 34 4 3 4 1 11 5 38 20 20 
PUSHW[ ]	/* 1 value pushed */
588 
NPUSHB[ ]	/* 27 values pushed */
32 5 20 32 32 5 20 38 24 34 32 5 29 10 38 36 39 20 19 21 5 7 4 32 33 31 3 
PUSHW[ ]	/* 8 values pushed */
598 29 457 24 34 598 18 597 
NPUSHB[ ]	/* 9 values pushed */
13 1 186 0 0 32 0 2 0 
PUSHW[ ]	/* 3 values pushed */
481 26 434 
PUSHB[ ]	/* 7 values pushed */
27 27 24 5 16 186 15 
PUSHW[ ]	/* 3 values pushed */
486 12 288 
NPUSHB[ ]	/* 10 values pushed */
13 13 10 13 48 7 64 7 2 7 
PUSHW[ ]	/* 1 value pushed */
596 
PUSHB[ ]	/* 4 values pushed */
112 36 1 36 
PUSHW[ ]	/* 1 value pushed */
425 
PUSHB[ ]	/* 6 values pushed */
48 0 64 0 2 0 
PUSHW[ ]	/* 1 value pushed */
596 
PUSHB[ ]	/* 6 values pushed */
15 1 31 1 2 1 
PUSHW[ ]	/* 1 value pushed */
332 
PUSHB[ ]	/* 7 values pushed */
26 48 16 64 16 2 16 
PUSHW[ ]	/* 1 value pushed */
596 
NPUSHB[ ]	/* 11 values pushed */
64 15 1 15 246 63 21 79 21 2 21 
PUSHW[ ]	/* 1 value pushed */
596 
PUSHB[ ]	/* 6 values pushed */
0 31 16 31 2 31 
PUSHW[ ]	/* 1 value pushed */
332 
PUSHB[ ]	/* 3 values pushed */
12 26 11 
PUSHW[ ]	/* 1 value pushed */
443 
NPUSHB[ ]	/* 18 values pushed */
25 0 12 16 12 2 32 12 48 12 2 12 12 41 40 178 184 24 
CALL[ ]	/* CallFunction */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[11101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP2[ ]	/* DeltaExceptionP2 */
MIRP[01101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[01101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP2[ ]	/* DeltaExceptionP2 */
MIRP[01101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01100]	/* MoveIndirectRelPt */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01100]	/* MoveIndirectRelPt */
MIRP[11101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTPV[ ]	/* SetFVectorToPVector */
MDAP[0]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTPV[ ]	/* SetFVectorToPVector */
RDTG[ ]	/* RoundDownToGrid */
MDRP[00100]	/* MoveDirectRelPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
SRP2[ ]	/* SetRefPoint2 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1024;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = percent;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(359,-54,l),
(564,-54,l),
(1354,1491,l),
(1149,1491,l)
);
},
{
closed = 1;
nodes = (
(92,917,o),
(116,843,o),
(195,777,cs),
(234,744,o),
(285,727,o),
(347,727,cs),
(452,727,o),
(549,778,o),
(588,882,cs),
(607,934,o),
(617,1017,o),
(617,1130,cs),
(617,1417,o),
(514,1491,o),
(357,1491,cs),
(181,1491,o),
(92,1373,o),
(92,1136,cs)
);
},
{
closed = 1;
nodes = (
(295,1212,o),
(300,1257,o),
(311,1286,cs),
(321,1315,o),
(336,1330,o),
(357,1330,cs),
(380,1330,o),
(395,1317,o),
(403,1291,cs),
(410,1265,o),
(414,1217,o),
(414,1148,cs),
(414,1032,o),
(411,959,o),
(404,929,cs),
(397,898,o),
(381,883,o),
(357,883,cs),
(332,883,o),
(315,900,o),
(307,934,cs),
(299,967,o),
(295,1040,o),
(295,1153,cs)
);
},
{
closed = 1;
nodes = (
(1091,137,o),
(1115,60,o),
(1194,-5,cs),
(1233,-38,o),
(1284,-54,o),
(1346,-54,cs),
(1451,-54,o),
(1548,-3,o),
(1587,101,cs),
(1606,153,o),
(1616,236,o),
(1616,349,cs),
(1616,624,o),
(1524,710,o),
(1356,710,cs),
(1180,710,o),
(1091,591,o),
(1091,354,cs)
);
},
{
closed = 1;
nodes = (
(1294,431,o),
(1299,475,o),
(1310,504,cs),
(1320,533,o),
(1335,548,o),
(1356,548,cs),
(1379,548,o),
(1394,535,o),
(1402,509,cs),
(1409,483,o),
(1413,435,o),
(1413,366,cs),
(1413,250,o),
(1410,177,o),
(1403,147,cs),
(1396,116,o),
(1380,101,o),
(1356,101,cs),
(1331,101,o),
(1314,118,o),
(1306,152,cs),
(1298,186,o),
(1294,259,o),
(1294,372,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
5 9 5 35 2 116 8 3 0 1 1 98 2 3 20 2 2 3 2 1 1 40 53 154 33 
PUSHW[ ]	/* 1 value pushed */
271 
PUSHB[ ]	/* 4 values pushed */
40 21 154 14 
PUSHW[ ]	/* 1 value pushed */
271 
NPUSHB[ ]	/* 22 values pushed */
27 154 7 7 3 3 0 0 47 154 40 11 2 18 1 10 24 3 30 0 50 30 
PUSHW[ ]	/* 1 value pushed */
599 
PUSHB[ ]	/* 3 values pushed */
44 166 50 
PUSHW[ ]	/* 1 value pushed */
599 
PUSHB[ ]	/* 4 values pushed */
36 74 57 10 
PUSHW[ ]	/* 1 value pushed */
599 
PUSHB[ ]	/* 3 values pushed */
24 166 18 
PUSHW[ ]	/* 1 value pushed */
599 
PUSHB[ ]	/* 6 values pushed */
4 73 56 92 201 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[10110]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[10110]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTCA[1]	/* SetFVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
SDPVTL[1]	/* SetDualPVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
MDRP[00100]	/* MoveDirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
RTG[ ]	/* RoundToGrid */
RS[ ]	/* ReadStore */
JROF[ ]	/* JumpRelativeOnFalse */
NPUSHB[ ]	/* 90 values pushed */
5 55 12 38 16 37 38 38 42 37 22 13 24 86 1 20 15 18 86 0 26 8 24 86 1 28 6 18 86 0 48 39 50 86 1 46 41 44 86 0 52 34 50 86 1 54 32 44 86 0 23 11 21 86 0 19 17 21 86 0 25 9 27 86 1 29 5 27 86 1 49 37 47 86 0 45 43 47 86 0 51 35 53 86 1 55 31 53 86 1 
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
FLIPRGON[ ]	/* FlipRangeOn */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]	/* DeltaExceptionP2 */";
};
width = 1707;
}
);
note = percent;
unicode = 37;
},
{
glyphname = ampersand;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1002,654,o),
(982,603,o),
(959,560,c),
(754,812,l),
(921,922,o),
(1005,1044,o),
(1005,1177,cs),
(1005,1341,o),
(883,1491,o),
(638,1491,cs),
(403,1491,o),
(258,1364,o),
(258,1172,cs),
(258,1061,o),
(309,949,o),
(412,835,c),
(193,711,o),
(81,587,o),
(81,398,cs),
(81,158,o),
(268,-25,o),
(568,-25,cs),
(735,-25,o),
(872,31,o),
(980,143,c),
(1041,71,o),
(1111,17,o),
(1188,-20,c),
(1347,178,l),
(1274,225,o),
(1204,281,o),
(1139,348,c),
(1202,453,o),
(1241,555,o),
(1257,654,c),
(1019,712,l)
);
},
{
closed = 1;
nodes = (
(358,497,o),
(421,586,o),
(546,665,c),
(811,329,l),
(732,235,o),
(651,188,o),
(568,188,cs),
(463,188,o),
(358,263,o),
(358,396,cs)
);
},
{
closed = 1;
nodes = (
(518,1266,o),
(571,1314,o),
(647,1314,cs),
(732,1314,o),
(777,1252,o),
(777,1183,cs),
(777,1115,o),
(728,1047,o),
(631,979,c),
(556,1063,o),
(518,1135,o),
(518,1194,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
54 3 1 7 16 26 16 44 46 70 3 100 3 118 3 132 3 7 189 8 1 22 19 22 23 21 27 39 14 44 25 219 8 236 8 7 26 16 29 3 21 27 46 0 44 3 8 1 10 29 26 27 3 4 5 37 16 39 46 8 4 6 18 1 0 5 
PUSHW[ ]	/* 1 value pushed */
603 
NPUSHB[ ]	/* 24 values pushed */
32 6 11 34 237 21 1 44 137 10 11 159 0 1 79 0 95 0 223 0 239 0 4 0 
PUSHW[ ]	/* 1 value pushed */
580 
PUSHB[ ]	/* 4 values pushed */
1 1 24 6 
PUSHW[ ]	/* 1 value pushed */
600 
PUSHB[ ]	/* 7 values pushed */
5 74 48 64 31 1 31 
PUSHW[ ]	/* 5 values pushed */
606 24 601 18 605 
PUSHB[ ]	/* 7 values pushed */
16 37 32 37 2 37 41 
PUSHW[ ]	/* 1 value pushed */
605 
NPUSHB[ ]	/* 9 values pushed */
48 13 1 13 73 47 92 89 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[00100]	/* MoveIndirectRelPt */
RTG[ ]	/* RoundToGrid */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
SMD[ ]	/* SetMinimumDistance */
RTHG[ ]	/* RoundToHalfGrid */
MIRP[01101]	/* MoveIndirectRelPt */
RTG[ ]	/* RoundToGrid */
MDAP[1]	/* MoveDirectAbsPt */
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SRP2[ ]	/* SetRefPoint2 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */";
};
width = 1365;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = quotesingle;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,944,l),
(349,944,l),
(399,1225,l),
(399,1466,l),
(113,1466,l),
(113,1225,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 2 values pushed */
4 384 
NPUSHB[ ]	/* 28 values pushed */
0 0 4 188 5 3 188 1 32 2 48 2 64 2 3 2 100 5 5 0 0 1 0 166 6 126 173 24 
CALL[ ]	/* CallFunction */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 512;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = parenleft;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(455,-108,o),
(376,213,o),
(376,532,cs),
(376,841,o),
(435,1098,o),
(616,1491,c),
(424,1491,l),
(213,1183,o),
(107,863,o),
(107,531,cs),
(107,205,o),
(211,-116,o),
(420,-431,c),
(613,-431,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
0 6 9 5 16 1 18 47 1 63 1 2 1 
PUSHW[ ]	/* 1 value pushed */
292 
PUSHB[ ]	/* 8 values pushed */
0 130 47 5 63 5 2 5 
PUSHW[ ]	/* 1 value pushed */
292 
NPUSHB[ ]	/* 12 values pushed */
6 169 3 156 0 9 9 12 11 126 108 24 
CALL[ ]	/* CallFunction */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[11101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIAP[1]	/* MoveIndirectAbsPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 683;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(491,-87,o),
(576,265,o),
(576,546,cs),
(576,868,o),
(470,1183,o),
(258,1491,c),
(67,1491,l),
(240,1114,o),
(306,859,o),
(306,519,cs),
(306,208,o),
(227,-108,o),
(69,-431,c),
(263,-431,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
38 4 40 10 2 5 16 0 18 32 6 48 6 2 6 
PUSHW[ ]	/* 1 value pushed */
292 
PUSHB[ ]	/* 7 values pushed */
5 32 11 48 11 2 11 
PUSHW[ ]	/* 1 value pushed */
292 
NPUSHB[ ]	/* 20 values pushed */
0 130 5 169 8 156 32 2 48 2 64 2 3 2 2 13 12 88 173 24 
CALL[ ]	/* CallFunction */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIAP[1]	/* MoveIndirectAbsPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 683;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = asterisk;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(398,845,o),
(444,921,o),
(503,1022,c),
(638,799,l),
(791,900,l),
(614,1102,l),
(721,1120,o),
(807,1136,o),
(871,1151,c),
(818,1332,l),
(767,1313,o),
(712,1289,o),
(652,1262,cs),
(600,1238,o),
(571,1225,o),
(566,1223,c),
(584,1352,o),
(593,1441,o),
(593,1491,c),
(415,1491,l),
(415,1475,ls),
(415,1414,o),
(423,1331,o),
(439,1225,c),
(375,1264,o),
(297,1303,o),
(205,1342,c),
(146,1166,l),
(209,1143,o),
(294,1122,o),
(401,1102,c),
(362,1064,ls),
(309,1013,o),
(259,962,o),
(212,909,c),
(363,792,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
15 9 7 25 4 22 3 6 0 22 20 13 4 6 9 15 25 3 13 12 1 
NPUSHW[ ]	/* 10 values pushed */
607 0 23 607 24 6 289 7 20 289 
NPUSHB[ ]	/* 15 values pushed */
19 175 7 233 12 24 175 0 0 16 0 192 0 3 0 
PUSHW[ ]	/* 1 value pushed */
393 
NPUSHB[ ]	/* 16 values pushed */
13 12 0 24 129 23 0 129 1 19 188 20 7 188 6 23 
NPUSHW[ ]	/* 10 values pushed */
455 13 1 455 12 20 368 13 6 368 
PUSHB[ ]	/* 6 values pushed */
32 13 48 13 2 13 
PUSHW[ ]	/* 1 value pushed */
292 
PUSHB[ ]	/* 4 values pushed */
12 95 150 24 
CALL[ ]	/* CallFunction */
MDAP[1]	/* MoveDirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 1024;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = plus;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(66,846,l),
(66,608,l),
(392,608,l),
(392,281,l),
(631,281,l),
(631,608,l),
(957,608,l),
(957,846,l),
(631,846,l),
(631,1173,l),
(392,1173,l),
(392,846,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
15 1 1 1 195 3 10 111 4 15 9 1 9 195 7 3 15 4 1 4 
PUSHW[ ]	/* 1 value pushed */
268 
PUSHB[ ]	/* 6 values pushed */
5 1 2 2 5 6 
PUSHW[ ]	/* 1 value pushed */
608 
PUSHB[ ]	/* 6 values pushed */
7 10 0 9 1 9 
PUSHW[ ]	/* 1 value pushed */
268 
NPUSHB[ ]	/* 17 values pushed */
0 7 11 8 8 239 7 1 79 7 80 7 2 7 88 108 24 
CALL[ ]	/* CallFunction */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]	/* MoveDirectAbsPt */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[00100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 1024;
}
);
note = plus;
unicode = 43;
},
{
glyphname = comma;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(335,0,l),
(328,-109,o),
(272,-181,o),
(169,-216,c),
(224,-326,l),
(396,-254,o),
(472,-160,o),
(472,28,cs),
(472,276,l),
(211,276,l),
(211,0,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 2 values pushed */
6 282 
PUSHB[ ]	/* 3 values pushed */
5 195 1 
PUSHW[ ]	/* 1 value pushed */
616 
PUSHB[ ]	/* 5 values pushed */
9 10 6 188 5 
PUSHW[ ]	/* 1 value pushed */
321 
PUSHB[ ]	/* 6 values pushed */
9 8 8 1 1 2 
PUSHW[ ]	/* 1 value pushed */
615 
NPUSHB[ ]	/* 13 values pushed */
9 9 31 0 175 0 2 0 73 10 110 149 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP2[ ]	/* DeltaExceptionP2 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10101]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 683;
}
);
note = comma;
unicode = 44;
},
{
glyphname = hyphen;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(617,672,l),
(65,672,l),
(65,391,l),
(617,391,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
3 0 147 2 1 2 3 249 5 1 0 73 4 88 108 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]	/* MoveDirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 683;
}
);
note = hyphen;
unicode = (45,173);
},
{
glyphname = period;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(472,0,l),
(472,276,l),
(211,276,l),
(211,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 0 
PUSHW[ ]	/* 1 value pushed */
616 
PUSHB[ ]	/* 5 values pushed */
2 3 10 1 2 
PUSHW[ ]	/* 1 value pushed */
615 
PUSHB[ ]	/* 8 values pushed */
3 3 0 73 4 110 149 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 683;
}
);
note = period;
unicode = 46;
},
{
glyphname = slash;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(575,1491,l),
(364,1491,l),
(1,-25,l),
(208,-25,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
1 2 3 3 
PUSHW[ ]	/* 1 value pushed */
594 
NPUSHB[ ]	/* 13 values pushed */
0 1 20 0 0 1 2 1 0 3 0 10 1 
PUSHW[ ]	/* 1 value pushed */
292 
PUSHB[ ]	/* 4 values pushed */
2 74 5 3 
PUSHW[ ]	/* 1 value pushed */
292 
PUSHB[ ]	/* 6 values pushed */
0 73 4 141 114 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTCA[1]	/* SetFVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
SDPVTL[1]	/* SetDualPVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
MDRP[00100]	/* MoveDirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 576;
}
);
note = slash;
unicode = 47;
},
{
glyphname = zero;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,1479,o),
(85,1300,o),
(85,728,cs),
(85,339,o),
(133,168,o),
(267,58,cs),
(334,3,o),
(417,-25,o),
(518,-25,cs),
(698,-25,o),
(833,78,o),
(894,286,cs),
(924,389,o),
(939,536,o),
(939,726,cs),
(939,1133,o),
(872,1316,o),
(745,1409,cs),
(682,1456,o),
(604,1479,o),
(511,1479,cs)
);
},
{
closed = 1;
nodes = (
(356,961,o),
(368,1088,o),
(391,1151,cs),
(414,1214,o),
(455,1245,o),
(513,1245,cs),
(571,1245,o),
(612,1211,o),
(635,1144,cs),
(658,1077,o),
(669,927,o),
(669,696,cs),
(669,509,o),
(658,382,o),
(635,313,cs),
(612,244,o),
(570,210,o),
(511,210,cs),
(456,210,o),
(411,243,o),
(383,331,cs),
(368,374,o),
(360,436,o),
(359,516,cs),
(356,769,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
73 2 68 6 68 10 73 13 89 2 85 6 86 10 89 13 108 2 101 6 101 10 108 13 123 2 117 6 117 10 123 13 134 22 137 28 196 6 19 67 8 26 146 0 5 20 146 8 13 23 157 127 4 1 0 4 16 4 2 4 
PUSHW[ ]	/* 1 value pushed */
332 
PUSHB[ ]	/* 4 values pushed */
30 16 226 15 
PUSHW[ ]	/* 1 value pushed */
369 
NPUSHB[ ]	/* 13 values pushed */
112 12 1 32 12 48 12 64 12 80 12 4 12 
PUSHW[ ]	/* 1 value pushed */
332 
PUSHB[ ]	/* 4 values pushed */
29 160 184 24 
CALL[ ]	/* CallFunction */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
RS[ ]	/* ReadStore */
JROF[ ]	/* JumpRelativeOnFalse */
NPUSHB[ ]	/* 50 values pushed */
1 28 6 38 18 38 10 37 2 37 21 7 23 99 1 19 9 16 99 0 25 1 23 99 1 27 14 15 99 0 22 5 20 99 0 17 11 20 99 0 24 3 26 99 1 28 13 26 99 1 
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
FLIPRGON[ ]	/* FlipRangeOn */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1024;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
lastChange = "2023-06-10 15:12:15 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(439,1345,o),
(328,1219,o),
(160,1100,c),
(160,846,l),
(261,892,o),
(355,965,o),
(442,1066,c),
(442,0,l),
(710,0,l),
(710,1479,l),
(494,1479,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
4 0 6 0 1 4 6 
PUSHW[ ]	/* 1 value pushed */
551 
NPUSHB[ ]	/* 14 values pushed */
15 7 31 7 2 7 7 3 0 4 3 12 7 6 
PUSHW[ ]	/* 1 value pushed */
369 
PUSHB[ ]	/* 3 values pushed */
4 4 3 
PUSHW[ ]	/* 1 value pushed */
298 
NPUSHB[ ]	/* 10 values pushed */
2 2 0 1 160 1 2 1 74 10 
PUSHW[ ]	/* 3 values pushed */
349 413 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIAP[1]	/* MoveIndirectAbsPt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 859;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
lastChange = "2023-06-10 15:12:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(369,1171,o),
(428,1248,o),
(527,1248,cs),
(618,1248,o),
(674,1178,o),
(674,1086,cs),
(674,1043,o),
(661,994,o),
(634,939,cs),
(607,884,o),
(533,791,o),
(412,661,cs),
(135,364,o),
(53,191,o),
(48,0,c),
(943,0,l),
(943,249,l),
(409,249,l),
(434,306,o),
(517,410,o),
(659,561,cs),
(887,802,o),
(942,920,o),
(942,1081,cs),
(942,1297,o),
(821,1479,o),
(529,1479,cs),
(252,1479,o),
(100,1267,o),
(83,1018,c),
(349,1018,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
215 3 1 6 12 22 12 24 17 3 3 12 22 12 38 8 69 8 89 3 166 18 201 9 202 10 232 10 9 23 8 12 7 15 9 11 11 
PUSHW[ ]	/* 1 value pushed */
364 
NPUSHB[ ]	/* 23 values pushed */
17 19 20 17 17 19 11 9 4 12 19 17 24 9 11 7 19 17 21 15 1 186 0 
PUSHW[ ]	/* 1 value pushed */
587 
PUSHB[ ]	/* 6 values pushed */
24 146 4 5 13 12 
PUSHW[ ]	/* 1 value pushed */
259 
NPUSHB[ ]	/* 11 values pushed */
14 15 12 21 157 7 226 13 74 27 0 
PUSHW[ ]	/* 1 value pushed */
369 
NPUSHB[ ]	/* 25 values pushed */
1 246 111 15 127 15 143 15 159 15 175 15 191 15 207 15 223 15 8 15 73 26 178 184 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTPV[ ]	/* SetFVectorToPVector */
MDAP[0]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
SFVTPV[ ]	/* SetFVectorToPVector */
RDTG[ ]	/* RoundDownToGrid */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
RTG[ ]	/* RoundToGrid */
RS[ ]	/* ReadStore */
JROF[ ]	/* JumpRelativeOnFalse */
NPUSHB[ ]	/* 14 values pushed */
22 23 5 6 23 5 21 99 1 22 6 24 99 1 
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
FLIPRGON[ ]	/* FlipRangeOn */
FLIPRGON[ ]	/* FlipRangeOn */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1024;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
lastChange = "2023-06-10 15:12:07 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(339,1179,o),
(390,1245,o),
(476,1245,cs),
(552,1245,o),
(604,1189,o),
(604,1100,cs),
(604,957,o),
(504,881,o),
(396,881,c),
(394,673,l),
(416,676,o),
(420,676,o),
(441,676,cs),
(588,676,o),
(670,568,o),
(670,419,cs),
(670,306,o),
(613,207,o),
(505,207,cs),
(401,207,o),
(347,264,o),
(316,419,c),
(57,419,l),
(88,106,o),
(210,-25,o),
(504,-25,cs),
(688,-25,o),
(818,49,o),
(886,185,cs),
(920,253,o),
(937,328,o),
(937,409,cs),
(937,597,o),
(851,725,o),
(679,790,c),
(806,866,o),
(869,975,o),
(869,1116,cs),
(869,1328,o),
(731,1479,o),
(492,1479,cs),
(237,1479,o),
(73,1292,o),
(73,1048,c),
(323,1048,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
100 20 115 20 2 47 9 63 9 68 8 75 9 92 9 85 17 102 8 107 9 102 17 224 14 10 57 8 29 27 19 9 7 24 9 9 15 30 191 30 2 30 
PUSHW[ ]	/* 1 value pushed */
581 
NPUSHB[ ]	/* 14 values pushed */
27 27 16 4 1 186 127 0 143 0 191 0 3 0 
PUSHW[ ]	/* 1 value pushed */
456 
PUSHB[ ]	/* 7 values pushed */
36 146 4 5 18 186 19 
PUSHW[ ]	/* 1 value pushed */
456 
NPUSHB[ ]	/* 15 values pushed */
21 146 16 13 30 246 29 29 1 7 157 127 33 1 33 
PUSHW[ ]	/* 1 value pushed */
329 
PUSHB[ ]	/* 6 values pushed */
24 157 12 74 39 0 
PUSHW[ ]	/* 1 value pushed */
369 
PUSHB[ ]	/* 3 values pushed */
1 226 19 
PUSHW[ ]	/* 1 value pushed */
369 
NPUSHB[ ]	/* 17 values pushed */
111 18 127 18 143 18 159 18 175 18 5 18 73 38 160 184 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[01101]	/* MoveIndirectRelPt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
MIRP[00100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
DELTAP2[ ]	/* DeltaExceptionP2 */
RTHG[ ]	/* RoundToHalfGrid */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
RTG[ ]	/* RoundToGrid */
RS[ ]	/* ReadStore */
JROF[ ]	/* JumpRelativeOnFalse */
NPUSHB[ ]	/* 41 values pushed */
34 35 22 26 10 15 5 6 14 38 22 15 24 99 1 35 5 33 99 1 26 10 24 99 3 23 13 21 99 0 34 6 36 99 1 25 11 27 99 1 10 
ALIGNRP[ ]	/* AlignRelativePt */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
FLIPRGON[ ]	/* FlipRangeOn */
FLIPRGON[ ]	/* FlipRangeOn */
FLIPRGON[ ]	/* FlipRangeOn */
FLIPRGON[ ]	/* FlipRangeOn */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */";
};
width = 1006;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,300,l),
(592,300,l),
(592,0,l),
(847,0,l),
(847,300,l),
(993,300,l),
(993,540,l),
(847,540,l),
(847,1479,l),
(631,1479,l),
(33,540,l)
);
},
{
closed = 1;
nodes = (
(592,1054,l),
(592,540,l),
(267,540,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
32 10 47 12 48 10 63 12 64 10 79 12 90 12 118 10 8 179 0 1 42 0 36 13 54 13 71 12 70 13 86 0 6 12 0 10 10 
PUSHW[ ]	/* 1 value pushed */
356 
NPUSHB[ ]	/* 13 values pushed */
13 12 20 13 13 12 10 0 2 11 11 3 13 
PUSHW[ ]	/* 1 value pushed */
259 
NPUSHB[ ]	/* 9 values pushed */
9 5 8 8 4 31 9 1 9 
PUSHW[ ]	/* 1 value pushed */
472 
NPUSHB[ ]	/* 18 values pushed */
7 1 0 4 6 7 12 13 9 0 10 9 12 7 11 8 8 7 
PUSHW[ ]	/* 1 value pushed */
298 
PUSHB[ ]	/* 4 values pushed */
5 2 1 6 
PUSHW[ ]	/* 1 value pushed */
344 
NPUSHB[ ]	/* 21 values pushed */
96 3 112 3 2 64 3 96 3 2 3 74 15 96 9 112 9 2 9 73 14 
PUSHW[ ]	/* 3 values pushed */
324 417 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
DELTAP2[ ]	/* DeltaExceptionP2 */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[10100]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
ALIGNRP[ ]	/* AlignRelativePt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
SDPVTL[1]	/* SetDualPVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
MDRP[00100]	/* MoveDirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1024;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
lastChange = "2023-06-10 15:10:37 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(310,653,l),
(362,726,o),
(423,763,o),
(493,763,cs),
(618,763,o),
(688,652,o),
(688,491,cs),
(688,294,o),
(607,204,o),
(503,204,cs),
(403,204,o),
(338,294,o),
(326,397,c),
(56,397,l),
(79,140,o),
(236,-25,o),
(493,-25,cs),
(781,-25,o),
(960,186,o),
(960,502,cs),
(960,789,o),
(782,981,o),
(563,981,cs),
(506,981,o),
(446,965,o),
(384,934,c),
(430,1204,l),
(887,1204,l),
(887,1454,l),
(230,1454,l),
(93,685,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
137 27 154 27 2 4 4 1 107 0 123 0 164 4 179 4 196 4 212 4 228 4 244 4 8 51 0 67 0 103 14 118 14 4 27 3 4 4 
PUSHW[ ]	/* 1 value pushed */
259 
NPUSHB[ ]	/* 10 values pushed */
28 0 20 28 28 0 28 16 4 25 
PUSHW[ ]	/* 1 value pushed */
257 
PUSHB[ ]	/* 8 values pushed */
48 6 1 6 6 12 2 3 
PUSHW[ ]	/* 1 value pushed */
259 
PUSHB[ ]	/* 6 values pushed */
1 0 4 16 186 15 
PUSHW[ ]	/* 1 value pushed */
288 
NPUSHB[ ]	/* 12 values pushed */
19 146 12 13 0 28 15 3 4 22 16 2 
PUSHW[ ]	/* 1 value pushed */
329 
NPUSHB[ ]	/* 9 values pushed */
22 157 0 9 1 9 74 30 16 
PUSHW[ ]	/* 1 value pushed */
369 
NPUSHB[ ]	/* 22 values pushed */
15 15 31 15 47 15 3 143 15 159 15 175 15 239 15 255 15 5 15 73 29 178 
PUSHW[ ]	/* 2 values pushed */
317 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[11101]	/* MoveIndirectRelPt */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTPV[ ]	/* SetFVectorToPVector */
MDAP[0]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
SFVTCA[1]	/* SetFVectorToAxis */
RDTG[ ]	/* RoundDownToGrid */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
IP[ ]	/* InterpolatePts */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
DELTAP3[ ]	/* DeltaExceptionP3 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]	/* DeltaExceptionP2 */";
};
width = 1024;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
lastChange = "2023-06-10 15:10:49 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(929,1329,o),
(769,1479,o),
(542,1479,cs),
(239,1479,o),
(88,1235,o),
(88,744,cs),
(88,385,o),
(155,161,o),
(296,55,cs),
(367,2,o),
(450,-25,o),
(545,-25,cs),
(798,-25,o),
(969,164,o),
(969,477,cs),
(969,793,o),
(803,952,o),
(607,952,cs),
(514,952,o),
(431,916,o),
(359,844,c),
(359,979,o),
(375,1080,o),
(406,1147,cs),
(437,1214,o),
(484,1248,o),
(546,1248,cs),
(627,1248,o),
(674,1194,o),
(689,1085,c),
(938,1085,l)
);
},
{
closed = 1;
nodes = (
(382,657,o),
(449,740,o),
(542,740,cs),
(637,740,o),
(700,653,o),
(700,470,cs),
(700,273,o),
(624,206,o),
(543,206,cs),
(440,206,o),
(382,319,o),
(382,518,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
153 20 1 71 17 73 21 150 2 151 17 4 32 64 9 33 64 8 6 9 33 0 186 15 1 31 1 95 1 3 1 1 3 33 
PUSHW[ ]	/* 1 value pushed */
257 
NPUSHB[ ]	/* 12 values pushed */
9 9 15 3 146 22 5 27 146 15 13 1 
PUSHW[ ]	/* 1 value pushed */
369 
NPUSHB[ ]	/* 22 values pushed */
0 246 30 157 255 12 1 80 12 96 12 112 12 128 12 144 12 5 12 74 37 6 
PUSHW[ ]	/* 3 values pushed */
320 24 373 
NPUSHB[ ]	/* 20 values pushed */
255 19 1 80 19 175 19 191 19 207 19 223 19 239 19 6 19 73 36 160 
PUSHW[ ]	/* 2 values pushed */
317 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[00101]	/* MoveIndirectRelPt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
RS[ ]	/* ReadStore */
JROF[ ]	/* JumpRelativeOnFalse */
NPUSHB[ ]	/* 48 values pushed */
25 32 10 21 4 5 17 37 4 21 6 99 0 28 14 30 99 1 26 16 24 99 0 32 10 30 99 1 5 20 3 99 1 29 13 27 99 0 25 18 27 99 0 31 11 33 99 1 
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
FLIPRGON[ ]	/* FlipRangeOn */
FLIPRGON[ ]	/* FlipRangeOn */
FLIPRGON[ ]	/* FlipRangeOn */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MD[0]	/* MeasureDistance */
EQ[ ]	/* Equal */
JROF[ ]	/* JumpRelativeOnFalse */
PUSHB[ ]	/* 7 values pushed */
34 35 7 8 35 7 33 
PUSHW[ ]	/* 1 value pushed */
352 
PUSHB[ ]	/* 4 values pushed */
5 34 8 24 
PUSHW[ ]	/* 1 value pushed */
352 
PUSHB[ ]	/* 3 values pushed */
0 7 6 
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
FLIPRGON[ ]	/* FlipRangeOn */
FLIPRGON[ ]	/* FlipRangeOn */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1024;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(697,1212,l),
(419,832,o),
(266,428,o),
(238,0,c),
(499,0,l),
(519,491,o),
(746,998,o),
(951,1269,c),
(951,1454,l),
(83,1454,l),
(83,1212,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
8 3 36 8 54 8 70 3 68 7 105 3 121 3 149 7 172 8 208 8 228 8 11 8 1 5 8 9 
PUSHW[ ]	/* 1 value pushed */
259 
NPUSHB[ ]	/* 28 values pushed */
1 0 4 6 12 5 157 6 6 0 1 74 11 111 0 127 0 143 0 159 0 4 0 73 10 160 184 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00110]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1024;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(158,722,o),
(75,597,o),
(75,414,cs),
(75,133,o),
(251,-25,o),
(514,-25,cs),
(798,-25,o),
(949,151,o),
(949,412,cs),
(949,600,o),
(868,725,o),
(705,789,c),
(837,858,o),
(902,965,o),
(902,1109,cs),
(902,1312,o),
(779,1479,o),
(512,1479,cs),
(265,1479,o),
(124,1325,o),
(124,1109,cs),
(124,966,o),
(191,860,o),
(323,789,c)
);
},
{
closed = 1;
nodes = (
(341,590,o),
(399,671,o),
(514,671,cs),
(621,671,o),
(685,593,o),
(685,436,cs),
(685,295,o),
(624,197,o),
(515,197,cs),
(407,197,o),
(341,285,o),
(341,429,cs)
);
},
{
closed = 1;
nodes = (
(373,1199,o),
(421,1258,o),
(514,1258,cs),
(607,1258,o),
(654,1200,o),
(654,1084,cs),
(654,959,o),
(593,898,o),
(513,898,cs),
(442,898,o),
(373,949,o),
(373,1080,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 85 values pushed */
32 0 47 12 48 0 63 12 64 0 79 12 182 23 224 0 239 12 240 0 255 12 11 4 4 4 8 20 4 20 8 4 149 4 149 8 167 31 224 4 224 8 229 14 236 16 236 20 229 22 242 4 242 8 11 116 8 0 36 3 12 9 42 12 0 27 146 160 45 1 128 45 1 45 45 18 33 146 6 5 39 146 18 13 9 
PUSHW[ ]	/* 1 value pushed */
260 
NPUSHB[ ]	/* 21 values pushed */
96 30 112 30 2 30 246 42 157 31 15 1 175 15 191 15 2 15 74 49 3 
PUSHW[ ]	/* 1 value pushed */
260 
NPUSHB[ ]	/* 26 values pushed */
111 24 127 24 2 24 246 36 157 111 21 127 21 143 21 159 21 175 21 5 21 73 48 160 184 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP2[ ]	/* DeltaExceptionP2 */
MIRP[01101]	/* MoveIndirectRelPt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP2[ ]	/* DeltaExceptionP2 */
DELTAP3[ ]	/* DeltaExceptionP3 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP2[ ]	/* DeltaExceptionP2 */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
MIRP[11101]	/* MoveIndirectRelPt */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
RS[ ]	/* ReadStore */
JROF[ ]	/* JumpRelativeOnFalse */
NPUSHB[ ]	/* 88 values pushed */
1 47 40 17 42 99 1 38 19 36 99 0 32 7 30 99 1 34 5 24 99 0 26 1 24 99 2 46 23 36 99 2 28 11 30 99 3 44 13 42 99 3 41 16 39 99 0 37 20 39 99 0 31 8 33 99 1 35 4 33 99 1 25 2 27 99 0 1 47 22 45 99 1 23 0 29 10 27 99 0 11 43 14 45 99 1 13 12 
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
CALL[ ]	/* CallFunction */
ALIGNRP[ ]	/* AlignRelativePt */
CALL[ ]	/* CallFunction */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
CALL[ ]	/* CallFunction */
ALIGNRP[ ]	/* AlignRelativePt */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
FLIPRGON[ ]	/* FlipRangeOn */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1024;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
lastChange = "2023-06-10 15:11:44 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(324,799,o),
(389,713,o),
(481,713,cs),
(576,713,o),
(642,797,o),
(642,936,cs),
(642,1135,o),
(584,1248,o),
(481,1248,cs),
(398,1248,o),
(324,1180,o),
(324,983,cs)
);
},
{
closed = 1;
nodes = (
(336,369,l),
(351,260,o),
(398,206,o),
(479,206,cs),
(541,206,o),
(588,240,o),
(619,307,cs),
(650,374,o),
(666,475,o),
(666,610,c),
(594,538,o),
(511,502,o),
(418,502,cs),
(222,502,o),
(56,661,o),
(56,977,cs),
(56,1290,o),
(227,1479,o),
(480,1479,cs),
(575,1479,o),
(658,1452,o),
(729,1399,cs),
(870,1293,o),
(937,1069,o),
(937,710,cs),
(937,219,o),
(786,-25,o),
(483,-25,cs),
(256,-25,o),
(96,125,o),
(87,369,c)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
74 17 72 21 135 11 149 11 153 17 149 20 6 32 64 33 9 64 8 6 33 9 0 186 0 1 16 1 80 1 3 1 1 3 33 
PUSHW[ ]	/* 1 value pushed */
257 
NPUSHB[ ]	/* 12 values pushed */
9 9 22 27 146 15 5 3 146 22 13 6 
PUSHW[ ]	/* 3 values pushed */
320 24 373 
PUSHB[ ]	/* 7 values pushed */
240 19 1 19 74 37 1 
PUSHW[ ]	/* 1 value pushed */
369 
NPUSHB[ ]	/* 30 values pushed */
0 246 30 157 240 12 1 111 12 127 12 143 12 159 12 175 12 191 12 207 12 223 12 8 12 73 36 178 184 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP2[ ]	/* DeltaExceptionP2 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[00101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
RS[ ]	/* ReadStore */
JROF[ ]	/* JumpRelativeOnFalse */
NPUSHB[ ]	/* 48 values pushed */
25 32 10 21 4 5 17 37 32 10 30 99 0 4 21 6 99 1 26 16 24 99 1 28 14 30 99 0 31 11 33 99 0 5 20 3 99 0 25 18 27 99 1 29 13 27 99 1 
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
FLIPRGON[ ]	/* FlipRangeOn */
FLIPRGON[ ]	/* FlipRangeOn */
FLIPRGON[ ]	/* FlipRangeOn */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MD[0]	/* MeasureDistance */
EQ[ ]	/* Equal */
JROF[ ]	/* JumpRelativeOnFalse */
PUSHB[ ]	/* 7 values pushed */
34 35 7 8 35 7 33 
PUSHW[ ]	/* 1 value pushed */
352 
PUSHB[ ]	/* 4 values pushed */
4 34 8 24 
PUSHW[ ]	/* 1 value pushed */
352 
PUSHB[ ]	/* 3 values pushed */
1 7 6 
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
FLIPRGON[ ]	/* FlipRangeOn */
FLIPRGON[ ]	/* FlipRangeOn */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1024;
}
);
note = nine;
unicode = 57;
},
{
glyphname = colon;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(472,786,l),
(472,1062,l),
(211,1062,l),
(211,786,l)
);
},
{
closed = 1;
nodes = (
(472,0,l),
(472,276,l),
(211,276,l),
(211,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 3 
PUSHW[ ]	/* 1 value pushed */
616 
PUSHB[ ]	/* 5 values pushed */
1 0 6 5 4 
PUSHW[ ]	/* 1 value pushed */
616 
NPUSHB[ ]	/* 10 values pushed */
6 7 10 3 0 1 2 2 5 6 
PUSHW[ ]	/* 1 value pushed */
615 
NPUSHB[ ]	/* 14 values pushed */
4 7 7 31 0 175 0 2 0 73 8 110 149 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP2[ ]	/* DeltaExceptionP2 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 683;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(472,786,l),
(472,1062,l),
(211,1062,l),
(211,786,l)
);
},
{
closed = 1;
nodes = (
(224,-326,l),
(396,-254,o),
(472,-160,o),
(472,28,cs),
(472,276,l),
(211,276,l),
(211,0,l),
(335,0,l),
(328,-109,o),
(272,-181,o),
(169,-216,c)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 2 values pushed */
10 282 
PUSHB[ ]	/* 5 values pushed */
9 195 13 2 3 
PUSHW[ ]	/* 1 value pushed */
616 
PUSHB[ ]	/* 5 values pushed */
1 0 6 5 4 
PUSHW[ ]	/* 1 value pushed */
616 
NPUSHB[ ]	/* 10 values pushed */
12 13 10 12 12 6 13 10 188 9 
PUSHW[ ]	/* 1 value pushed */
321 
PUSHB[ ]	/* 6 values pushed */
13 1 2 2 5 6 
PUSHW[ ]	/* 1 value pushed */
615 
NPUSHB[ ]	/* 17 values pushed */
13 13 4 4 3 3 31 0 175 0 2 0 73 14 110 149 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP2[ ]	/* DeltaExceptionP2 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10101]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 683;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = question;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(344,1216,o),
(410,1282,o),
(525,1282,cs),
(646,1282,o),
(704,1189,o),
(704,1089,cs),
(704,1000,o),
(659,928,o),
(543,805,cs),
(422,676,o),
(389,592,o),
(389,480,cs),
(390,384,l),
(631,384,l),
(630,395,o),
(630,405,o),
(630,415,cs),
(630,550,o),
(654,591,o),
(738,679,cs),
(909,856,o),
(962,954,o),
(962,1102,cs),
(962,1329,o),
(810,1491,o),
(538,1491,cs),
(337,1491,o),
(190,1397,o),
(143,1294,cs),
(120,1242,o),
(100,1165,o),
(84,1062,c),
(324,1029,l)
);
},
{
closed = 1;
nodes = (
(643,0,l),
(643,276,l),
(382,276,l),
(382,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
138 21 138 22 2 70 11 1 22 8 0 152 1 1 33 5 16 17 
PUSHW[ ]	/* 4 values pushed */
334 31 30 616 
PUSHB[ ]	/* 4 values pushed */
32 33 10 27 
PUSHW[ ]	/* 1 value pushed */
617 
NPUSHB[ ]	/* 12 values pushed */
5 1 16 151 31 31 32 17 130 30 30 32 
PUSHW[ ]	/* 1 value pushed */
615 
PUSHB[ ]	/* 4 values pushed */
33 33 1 24 
PUSHW[ ]	/* 1 value pushed */
618 
NPUSHB[ ]	/* 9 values pushed */
48 8 80 8 2 8 74 35 0 
PUSHW[ ]	/* 1 value pushed */
618 
NPUSHB[ ]	/* 13 values pushed */
48 1 80 1 143 1 3 1 73 34 92 108 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11110]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
MIRP[00100]	/* MoveIndirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
RS[ ]	/* ReadStore */
JROF[ ]	/* JumpRelativeOnFalse */
NPUSHB[ ]	/* 14 values pushed */
25 26 6 7 26 6 24 86 1 25 7 27 86 1 
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
FLIPRGON[ ]	/* FlipRangeOn */
FLIPRGON[ ]	/* FlipRangeOn */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1024;
}
);
note = question;
unicode = 63;
},
{
glyphname = A;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(285,0,l),
(354,290,l),
(778,290,l),
(846,0,l),
(1135,0,l),
(719,1466,l),
(417,1466,l),
(-3,0,l)
);
},
{
closed = 1;
nodes = (
(568,1194,l),
(721,530,l),
(411,530,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
47 0 32 1 63 0 79 0 4 56 0 55 1 48 12 104 8 103 10 120 8 119 10 188 0 179 1 9 4 8 9 3 5 10 9 9 6 10 6 8 3 9 1 9 3 3 121 2 1 20 2 2 1 0 9 6 6 121 7 0 20 7 7 0 9 1 0 2 8 10 105 4 5 
PUSHW[ ]	/* 1 value pushed */
265 
NPUSHB[ ]	/* 14 values pushed */
7 7 6 6 3 3 2 8 0 6 7 1 3 2 
PUSHW[ ]	/* 3 values pushed */
388 7 388 
NPUSHB[ ]	/* 17 values pushed */
64 9 128 9 2 32 9 48 9 96 9 144 9 208 9 5 9 
RTHG[ ]	/* RoundToHalfGrid */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
RTG[ ]	/* RoundToGrid */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
IP[ ]	/* InterpolatePts */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTCA[1]	/* SetFVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
SDPVTL[1]	/* SetDualPVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
CALL[ ]	/* CallFunction */
SDPVTL[1]	/* SetDualPVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
MDRP[00100]	/* MoveDirectRelPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SPVTL[1]	/* SetPVectorToLine */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
ALIGNRP[ ]	/* AlignRelativePt */
SPVTL[1]	/* SetPVectorToLine */
ALIGNRP[ ]	/* AlignRelativePt */
ALIGNRP[ ]	/* AlignRelativePt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */";
};
width = 1105;
}
);
note = A;
unicode = 65;
},
{
glyphname = B;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(594,0,ls),
(782,0,o),
(915,55,o),
(987,189,cs),
(1023,256,o),
(1041,329,o),
(1041,409,cs),
(1041,616,o),
(945,738,o),
(753,775,c),
(906,832,o),
(983,942,o),
(983,1103,cs),
(983,1270,o),
(889,1395,o),
(768,1436,cs),
(707,1456,o),
(641,1466,o),
(569,1466,cs),
(142,1466,l),
(142,0,l)
);
},
{
closed = 1;
nodes = (
(415,238,l),
(415,637,l),
(507,637,ls),
(635,637,o),
(687,614,o),
(725,554,cs),
(744,523,o),
(753,486,o),
(753,442,cs),
(753,315,o),
(692,238,o),
(507,238,cs)
);
},
{
closed = 1;
nodes = (
(415,875,l),
(415,1228,l),
(507,1228,ls),
(643,1228,o),
(711,1170,o),
(711,1054,cs),
(711,935,o),
(639,875,o),
(492,875,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
7 7 56 7 73 7 143 8 152 3 152 23 182 7 191 8 223 8 9 71 8 8 5 30 27 138 16 25 138 0 18 138 47 35 79 35 2 35 35 16 0 2 16 8 5 106 21 142 30 106 47 11 63 11 2 11 74 37 25 26 103 16 16 15 0 32 0 48 0 144 0 160 0 176 0 192 0 7 0 73 36 97 139 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP2[ ]	/* DeltaExceptionP2 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIAP[1]	/* MoveIndirectAbsPt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
RS[ ]	/* ReadStore */
JROF[ ]	/* JumpRelativeOnFalse */
NPUSHB[ ]	/* 51 values pushed */
2 33 3 37 13 38 32 38 19 7 21 93 3 23 2 21 93 1 28 14 30 93 1 33 9 30 93 3 20 6 18 93 0 7 22 4 24 93 1 29 12 27 93 0 31 10 34 93 1 9 8 
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
ALIGNRP[ ]	/* AlignRelativePt */
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
FLIPRGON[ ]	/* FlipRangeOn */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1108;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1031,1349,o),
(855,1491,o),
(602,1491,cs),
(369,1491,o),
(209,1364,o),
(150,1152,cs),
(120,1045,o),
(105,900,o),
(105,715,cs),
(105,222,o),
(272,-25,o),
(605,-25,cs),
(874,-25,o),
(1064,202,o),
(1070,525,c),
(799,525,l),
(780,320,o),
(713,217,o),
(600,217,cs),
(509,217,o),
(436,286,o),
(411,419,cs),
(398,485,o),
(392,594,o),
(392,746,cs),
(392,907,o),
(400,1016,o),
(415,1075,cs),
(445,1191,o),
(507,1249,o),
(598,1249,cs),
(698,1249,o),
(759,1167,o),
(780,1002,c),
(1060,1002,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
54 18 56 21 67 18 74 21 4 88 25 101 2 101 12 101 15 101 24 170 22 181 15 197 15 197 24 197 25 10 43 8 14 
PUSHW[ ]	/* 4 values pushed */
558 13 0 558 
PUSHB[ ]	/* 4 values pushed */
48 1 1 1 
PUSHW[ ]	/* 4 values pushed */
295 3 13 561 
NPUSHB[ ]	/* 10 values pushed */
11 3 111 23 3 11 111 16 9 1 
PUSHW[ ]	/* 1 value pushed */
370 
PUSHB[ ]	/* 3 values pushed */
0 135 13 
PUSHW[ ]	/* 1 value pushed */
370 
NPUSHB[ ]	/* 27 values pushed */
0 14 16 14 32 14 48 14 4 14 74 27 7 106 15 19 32 19 48 19 3 19 73 26 119 225 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
RS[ ]	/* ReadStore */
JROF[ ]	/* JumpRelativeOnFalse */
NPUSHB[ ]	/* 30 values pushed */
17 22 4 10 5 37 21 38 9 38 4 22 7 113 0 10 17 7 113 0 6 20 3 113 1 8 18 11 113 0 
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
FLIPRGON[ ]	/* FlipRangeOn */
FLIPRGON[ ]	/* FlipRangeOn */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1129;
}
);
note = C;
unicode = 67;
},
{
glyphname = D;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(629,0,ls),
(846,0,o),
(954,46,o),
(1052,192,cs),
(1150,338,o),
(1163,521,o),
(1163,786,cs),
(1163,1042,o),
(1127,1172,o),
(1036,1296,cs),
(944,1420,o),
(835,1466,o),
(607,1466,cs),
(150,1466,l),
(150,0,l)
);
},
{
closed = 1;
nodes = (
(427,230,l),
(427,1234,l),
(536,1234,ls),
(732,1234,o),
(806,1191,o),
(847,1056,cs),
(867,988,o),
(877,880,o),
(877,733,cs),
(877,578,o),
(866,467,o),
(844,401,cs),
(799,268,o),
(730,230,o),
(553,230,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
74 4 69 8 166 17 169 21 4 4 2 4 10 2 243 2 243 10 2 51 8 15 138 12 23 138 0 2 12 8 19 106 6 74 25 13 14 103 12 12 15 0 48 0 144 0 160 0 176 0 192 0 6 0 73 24 97 139 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
RS[ ]	/* ReadStore */
JROF[ ]	/* JumpRelativeOnFalse */
NPUSHB[ ]	/* 38 values pushed */
2 22 8 7 9 7 2 6 17 37 4 5 3 5 2 6 21 38 16 10 19 113 1 22 2 19 113 1 18 7 15 113 0 20 5 23 113 1 
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
LOOPCALL[ ]	/* LoopAndCallFunction */
CALL[ ]	/* CallFunction */
LOOPCALL[ ]	/* LoopAndCallFunction */
FLIPRGON[ ]	/* FlipRangeOn */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1221;
}
);
note = D;
unicode = 68;
},
{
glyphname = E;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(876,0,l),
(876,230,l),
(359,230,l),
(359,676,l),
(804,676,l),
(804,907,l),
(359,907,l),
(359,1232,l),
(850,1232,l),
(850,1466,l),
(82,1466,l),
(82,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
5 4 105 7 7 79 6 1 6 6 11 2 3 105 1 0 2 9 8 105 10 11 8 6 142 2 135 9 74 13 3 8 103 11 11 15 0 48 0 144 0 160 0 176 0 192 0 6 0 73 12 97 139 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 938;
}
);
note = E;
unicode = 69;
},
{
glyphname = F;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(361,0,l),
(361,637,l),
(770,637,l),
(770,870,l),
(361,870,l),
(361,1231,l),
(874,1231,l),
(874,1466,l),
(85,1466,l),
(85,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
5 4 105 7 7 79 6 1 6 6 9 2 3 105 1 0 2 9 8 31 6 47 6 2 6 253 1 74 11 3 8 103 9 9 15 0 48 0 144 0 160 0 176 0 192 0 6 0 73 10 97 139 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[00100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 940;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
lastChange = "2023-06-09 21:53:46 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1076,1374,o),
(924,1491,o),
(649,1491,cs),
(469,1491,o),
(341,1439,o),
(230,1297,cs),
(118,1155,o),
(95,968,o),
(95,707,cs),
(95,198,o),
(287,-25,o),
(626,-25,cs),
(799,-25,o),
(944,4,o),
(1145,156,c),
(1145,773,l),
(647,773,l),
(647,541,l),
(867,541,l),
(867,297,l),
(798,241,o),
(723,212,o),
(643,212,cs),
(538,212,o),
(439,274,o),
(407,410,cs),
(391,477,o),
(383,592,o),
(383,755,cs),
(383,1002,o),
(405,1117,o),
(485,1193,cs),
(524,1230,o),
(573,1249,o),
(632,1249,cs),
(745,1249,o),
(815,1170,o),
(844,1011,c),
(1121,1070,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
53 24 57 27 67 24 76 27 121 27 134 32 182 24 189 27 195 5 202 9 10 99 31 1 101 2 101 31 103 32 118 31 4 64 8 0 
PUSHW[ ]	/* 1 value pushed */
558 
PUSHB[ ]	/* 4 values pushed */
48 1 1 1 
PUSHW[ ]	/* 1 value pushed */
295 
NPUSHB[ ]	/* 17 values pushed */
3 15 16 105 18 17 17 22 3 111 30 3 11 111 22 9 1 
PUSHW[ ]	/* 1 value pushed */
370 
NPUSHB[ ]	/* 28 values pushed */
0 135 18 17 17 7 15 47 14 1 14 103 19 19 18 74 34 7 106 15 25 48 25 2 25 73 33 119 
PUSHW[ ]	/* 2 values pushed */
415 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[00100]	/* MoveIndirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
RS[ ]	/* ReadStore */
JROF[ ]	/* JumpRelativeOnFalse */
NPUSHB[ ]	/* 46 values pushed */
4 29 5 37 27 26 28 26 2 6 9 38 4 29 7 113 0 12 21 14 93 1 20 19 13 14 10 23 7 113 0 6 26 3 113 1 13 20 11 93 0 8 24 11 113 0 
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
LOOPCALL[ ]	/* LoopAndCallFunction */
CALL[ ]	/* CallFunction */
FLIPRGON[ ]	/* FlipRangeOn */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1233;
}
);
note = G;
unicode = 71;
},
{
glyphname = H;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(426,0,l),
(426,649,l),
(832,649,l),
(832,0,l),
(1110,0,l),
(1110,1466,l),
(832,1466,l),
(832,886,l),
(426,886,l),
(426,1466,l),
(148,1466,l),
(148,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
3 2 105 8 79 9 1 9 9 4 1 2 10 7 8 4 3 3 8 8 7 103 6 6 159 5 175 5 191 5 207 5 4 5 74 13 1 10 103 11 11 15 0 48 0 144 0 160 0 176 0 192 0 6 0 73 12 97 200 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 1259;
}
);
note = H;
unicode = 72;
},
{
glyphname = I;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(388,0,l),
(388,1466,l),
(107,1466,l),
(107,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
0 2 3 8 5 
PUSHW[ ]	/* 1 value pushed */
555 
NPUSHB[ ]	/* 9 values pushed */
1 2 103 3 3 48 0 1 0 
PUSHW[ ]	/* 1 value pushed */
555 
PUSHB[ ]	/* 4 values pushed */
4 97 200 24 
CALL[ ]	/* CallFunction */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[00100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIAP[1]	/* MoveIndirectAbsPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 489;
}
);
note = I;
unicode = 73;
},
{
glyphname = J;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(495,364,o),
(488,297,o),
(474,266,cs),
(460,235,o),
(435,220,o),
(399,220,cs),
(334,220,o),
(302,273,o),
(302,378,c),
(30,358,l),
(30,103,o),
(151,-25,o),
(394,-25,cs),
(633,-25,o),
(771,92,o),
(771,439,cs),
(771,1466,l),
(495,1466,l),
(495,467,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
22 9 1 22 8 0 2 8 185 7 
PUSHW[ ]	/* 1 value pushed */
445 
NPUSHB[ ]	/* 27 values pushed */
10 111 5 9 0 13 103 2 2 159 1 175 1 191 1 207 1 4 1 74 15 32 8 48 8 2 8 
PUSHW[ ]	/* 1 value pushed */
370 
PUSHB[ ]	/* 6 values pushed */
7 73 14 177 200 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
RS[ ]	/* ReadStore */
JROF[ ]	/* JumpRelativeOnFalse */
NPUSHB[ ]	/* 14 values pushed */
11 12 3 4 11 4 13 93 1 12 3 10 93 0 
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
FLIPRGON[ ]	/* FlipRangeOn */
FLIPRGON[ ]	/* FlipRangeOn */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]	/* DeltaExceptionP2 */";
};
width = 917;
}
);
note = J;
unicode = 74;
},
{
glyphname = K;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(418,0,l),
(418,449,l),
(574,680,l),
(778,0,l),
(1134,0,l),
(742,925,l),
(1111,1466,l),
(752,1466,l),
(418,838,l),
(418,1466,l),
(143,1466,l),
(143,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
84 5 123 8 138 8 164 2 170 8 5 21 8 1 45 3 39 5 40 6 56 6 86 8 118 3 134 3 151 5 8 6 2 1 9 8 5 3 4 5 8 6 10 8 7 8 9 7 
PUSHW[ ]	/* 1 value pushed */
564 
NPUSHB[ ]	/* 9 values pushed */
6 5 20 6 6 5 2 3 3 
PUSHW[ ]	/* 1 value pushed */
563 
NPUSHB[ ]	/* 31 values pushed */
4 9 20 4 4 9 2 9 8 5 4 7 4 3 3 1 2 10 7 8 5 4 9 8 7 10 2 9 9 10 3 
PUSHW[ ]	/* 1 value pushed */
562 
PUSHB[ ]	/* 3 values pushed */
4 135 7 
PUSHW[ ]	/* 1 value pushed */
562 
NPUSHB[ ]	/* 36 values pushed */
16 6 32 6 48 6 3 6 74 13 1 10 103 11 11 15 0 32 0 48 0 144 0 160 0 176 0 192 0 7 0 73 12 97 124 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP2[ ]	/* SetRefPoint2 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTCA[1]	/* SetFVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
SFVTCA[0]	/* SetFVectorToAxis */
RDTG[ ]	/* RoundDownToGrid */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTCA[1]	/* SetFVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
CALL[ ]	/* CallFunction */
SFVTL[0]	/* SetFVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
SRP2[ ]	/* SetRefPoint2 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[0]	/* MoveDirectAbsPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1131;
}
);
note = K;
unicode = 75;
},
{
glyphname = L;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(983,0,l),
(983,233,l),
(426,233,l),
(426,1466,l),
(147,1466,l),
(147,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 2 3 2 105 4 5 8 3 74 7 1 2 103 5 5 15 0 48 0 144 0 160 0 176 0 192 0 6 0 73 6 97 203 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00110]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 1024;
}
);
note = L;
unicode = 76;
},
{
glyphname = M;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,0,l),
(372,1165,l),
(629,0,l),
(898,0,l),
(1176,1165,l),
(1176,0,l),
(1428,0,l),
(1428,1466,l),
(1024,1466,l),
(769,457,l),
(528,1466,l),
(120,1466,l),
(120,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 152 values pushed */
15 2 16 7 16 10 47 2 103 2 164 2 6 5 1 10 3 23 1 22 8 25 9 54 8 57 9 70 8 73 9 100 1 106 3 132 8 139 9 147 1 156 3 149 8 155 9 17 0 1 13 3 7 8 17 1 30 3 32 1 45 3 38 8 102 1 105 3 103 8 117 1 122 3 133 1 138 3 147 1 159 3 149 8 154 9 161 1 174 3 163 8 173 9 182 1 185 3 182 8 185 9 196 1 203 3 197 8 201 9 213 1 217 3 230 8 233 9 35 9 16 2 7 10 3 3 9 5 6 8 8 9 8 11 12 8 4 3 3 1 1 0 2 9 2 8 1 3 5 11 7 6 
PUSHW[ ]	/* 1 value pushed */
261 
NPUSHB[ ]	/* 16 values pushed */
5 5 159 4 175 4 191 4 207 4 4 4 74 14 10 11 
PUSHW[ ]	/* 1 value pushed */
261 
NPUSHB[ ]	/* 21 values pushed */
12 12 15 0 48 0 144 0 160 0 176 0 192 0 6 0 73 13 97 200 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP1[ ]	/* SetRefPoint1 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SHPIX[ ]	/* ShiftZoneByPixel */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1560;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(353,0,l),
(339,960,l),
(794,0,l),
(1066,0,l),
(1066,1466,l),
(807,1466,l),
(807,543,l),
(383,1466,l),
(99,1466,l),
(99,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
106 7 1 0 2 27 7 127 7 144 2 159 7 160 2 175 7 7 7 1 22 1 144 1 159 6 4 25 6 54 1 56 6 69 1 72 6 134 1 160 1 175 6 247 1 9 7 2 1 7 1 2 2 133 6 7 20 6 6 7 2 7 8 3 1 2 8 6 8 1 6 8 3 2 
PUSHW[ ]	/* 1 value pushed */
261 
NPUSHB[ ]	/* 31 values pushed */
5 5 47 4 63 4 79 4 95 4 4 175 4 191 4 2 159 4 175 4 191 4 207 4 4 4 74 11 7 125 8 
PUSHW[ ]	/* 1 value pushed */
261 
NPUSHB[ ]	/* 37 values pushed */
9 9 32 0 48 0 64 0 80 0 4 160 0 176 0 2 15 0 32 0 48 0 144 0 160 0 176 0 192 0 7 0 73 10 97 200 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
DELTAP3[ ]	/* DeltaExceptionP3 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
DELTAP3[ ]	/* DeltaExceptionP3 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
SDPVTL[1]	/* SetDualPVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
MDRP[00100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */";
};
width = 1156;
}
);
note = N;
unicode = 78;
},
{
glyphname = O;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,1491,o),
(70,1245,o),
(70,752,cs),
(70,520,o),
(100,327,o),
(192,183,cs),
(283,39,o),
(403,-25,o),
(603,-25,cs),
(830,-25,o),
(988,74,o),
(1073,281,cs),
(1115,384,o),
(1136,528,o),
(1136,713,cs),
(1136,1249,o),
(960,1491,o),
(600,1491,cs)
);
},
{
closed = 1;
nodes = (
(362,836,o),
(368,947,o),
(377,1016,cs),
(393,1152,o),
(487,1249,o),
(603,1249,cs),
(674,1249,o),
(733,1217,o),
(780,1153,cs),
(827,1088,o),
(850,968,o),
(850,791,cs),
(850,539,o),
(848,369,o),
(762,281,cs),
(719,236,o),
(666,214,o),
(605,214,cs),
(530,214,o),
(471,247,o),
(426,314,cs),
(381,381,o),
(359,503,o),
(359,681,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
185 1 182 9 182 14 3 57 2 54 5 54 10 57 13 76 2 67 5 67 10 76 13 122 2 118 10 137 2 134 10 202 4 202 16 202 20 197 23 197 27 17 71 8 25 111 0 3 18 111 7 9 22 106 3 74 30 15 106 15 12 48 12 2 12 73 29 119 139 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
RS[ ]	/* ReadStore */
JROF[ ]	/* JumpRelativeOnFalse */
NPUSHB[ ]	/* 54 values pushed */
1 28 5 38 20 37 10 11 9 11 2 6 27 37 19 6 22 113 1 17 8 15 113 0 24 1 22 113 1 26 14 15 113 0 21 4 18 113 0 16 11 18 113 0 23 2 25 113 1 28 13 25 113 1 
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
LOOPCALL[ ]	/* LoopAndCallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
FLIPRGON[ ]	/* FlipRangeOn */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1206;
}
);
note = O;
unicode = 79;
},
{
glyphname = P;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(378,0,l),
(378,555,l),
(517,555,ls),
(814,555,o),
(1000,702,o),
(1000,1025,cs),
(1000,1250,o),
(903,1391,o),
(766,1434,cs),
(697,1455,o),
(614,1466,o),
(517,1466,cs),
(100,1466,l),
(100,0,l)
);
},
{
closed = 1;
nodes = (
(378,796,l),
(378,1227,l),
(464,1227,ls),
(575,1227,o),
(637,1217,o),
(681,1148,cs),
(702,1113,o),
(713,1068,o),
(713,1013,cs),
(713,872,o),
(657,796,o),
(444,796,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
37 8 21 138 0 9 138 13 13 11 0 2 11 8 16 106 47 5 1 5 74 23 21 10 103 11 11 15 0 48 0 144 0 160 0 176 0 192 0 6 0 73 22 97 139 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIAP[1]	/* MoveIndirectAbsPt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
RS[ ]	/* ReadStore */
JROF[ ]	/* JumpRelativeOnFalse */
NPUSHB[ ]	/* 26 values pushed */
2 19 3 37 18 38 14 7 16 93 1 19 2 16 93 1 15 6 13 93 0 17 4 20 93 1 
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
FLIPRGON[ ]	/* FlipRangeOn */";
};
width = 1026;
}
);
note = P;
unicode = 80;
},
{
glyphname = Q;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(967,-56,o),
(1042,-114,o),
(1113,-143,c),
(1210,47,l),
(1160,73,o),
(1104,116,o),
(1041,177,c),
(1122,269,o),
(1162,454,o),
(1162,731,cs),
(1162,1238,o),
(984,1491,o),
(627,1491,cs),
(274,1491,o),
(96,1245,o),
(96,752,cs),
(96,519,o),
(126,324,o),
(219,180,cs),
(311,36,o),
(429,-25,o),
(638,-25,cs),
(740,-25,o),
(823,-6,o),
(888,32,c)
);
},
{
closed = 1;
nodes = (
(384,894,o),
(389,1089,o),
(476,1181,cs),
(519,1226,o),
(570,1249,o),
(629,1249,cs),
(696,1249,o),
(753,1219,o),
(802,1158,cs),
(851,1097,o),
(875,965,o),
(875,760,cs),
(875,557,o),
(864,427,o),
(841,372,c),
(789,417,o),
(726,458,o),
(651,493,c),
(578,336,l),
(643,299,o),
(687,263,o),
(712,228,c),
(687,219,o),
(661,214,o),
(632,214,cs),
(467,214,o),
(384,366,o),
(384,667,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
54 5 58 8 58 12 67 5 76 8 76 12 170 0 165 20 184 0 219 0 233 0 11 73 19 89 0 107 19 3 181 4 181 9 185 11 3 56 8 34 20 36 3 37 17 0 15 3 32 2 13 15 18 3 13 37 34 20 3 22 36 32 37 1 37 
PUSHW[ ]	/* 4 values pushed */
265 32 18 445 
NPUSHB[ ]	/* 33 values pushed */
2 25 111 10 3 32 111 2 9 36 36 22 29 17 227 22 106 13 74 40 29 106 15 7 48 7 2 7 73 39 119 139 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
RS[ ]	/* ReadStore */
JROF[ ]	/* JumpRelativeOnFalse */
NPUSHB[ ]	/* 42 values pushed */
23 31 3 12 5 6 4 6 2 6 27 37 31 3 29 113 0 24 11 22 113 1 26 9 29 113 0 30 6 32 113 0 23 12 25 113 1 28 8 25 113 1 
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
LOOPCALL[ ]	/* LoopAndCallFunction */
FLIPRGON[ ]	/* FlipRangeOn */
FLIPRGON[ ]	/* FlipRangeOn */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1259;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
lastChange = "2023-06-09 21:53:24 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(370,0,l),
(370,611,l),
(413,611,ls),
(548,611,o),
(593,597,o),
(664,421,cs),
(834,0,l),
(1147,0,l),
(969,423,ls),
(895,598,o),
(852,630,o),
(802,654,c),
(1023,719,o),
(1085,862,o),
(1085,1049,cs),
(1085,1258,o),
(966,1403,o),
(826,1439,cs),
(755,1457,o),
(675,1466,o),
(584,1466,cs),
(93,1466,l),
(93,0,l)
);
},
{
closed = 1;
nodes = (
(370,1227,l),
(534,1227,ls),
(715,1227,o),
(802,1175,o),
(802,1036,cs),
(802,903,o),
(727,833,o),
(510,833,cs),
(370,833,l)
);
}
);
width = 1151;
}
);
note = R;
unicode = 82;
},
{
glyphname = S;
lastChange = "2023-06-09 21:54:03 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(975,1324,o),
(834,1491,o),
(545,1491,cs),
(272,1491,o),
(96,1339,o),
(96,1093,cs),
(96,1012,o),
(118,937,o),
(161,869,cs),
(204,800,o),
(296,734,o),
(435,671,cs),
(576,608,o),
(662,557,o),
(694,520,cs),
(725,483,o),
(741,441,o),
(741,395,cs),
(741,300,o),
(677,212,o),
(550,212,cs),
(426,212,o),
(354,283,o),
(338,499,c),
(57,499,l),
(68,141,o),
(228,-25,o),
(538,-25,cs),
(834,-25,o),
(1014,159,o),
(1014,416,cs),
(1014,521,o),
(984,607,o),
(924,676,cs),
(864,744,o),
(766,810,o),
(631,874,cs),
(511,931,o),
(438,976,o),
(411,1011,cs),
(384,1046,o),
(370,1082,o),
(370,1119,cs),
(370,1206,o),
(436,1262,o),
(521,1262,cs),
(622,1262,o),
(680,1187,o),
(697,1038,c),
(975,1038,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 117 values pushed */
12 28 21 8 199 15 3 106 2 154 12 2 25 27 39 30 133 36 150 28 214 39 230 39 247 39 7 78 8 11 9 9 121 31 29 20 31 31 29 9 11 3 17 79 29 79 31 85 29 85 31 188 29 188 31 202 29 7 31 29 33 23 31 29 34 26 11 9 14 6 19 185 32 20 48 20 96 20 112 20 144 20 160 20 6 20 20 38 17 0 185 47 1 111 1 2 63 1 79 1 127 1 143 1 4 1 1 17 3 111 38 3 23 111 17 9 1 
PUSHW[ ]	/* 1 value pushed */
370 
NPUSHB[ ]	/* 13 values pushed */
0 142 26 106 175 14 1 16 14 32 14 2 14 
PUSHW[ ]	/* 1 value pushed */
567 
NPUSHB[ ]	/* 14 values pushed */
42 6 106 15 34 1 239 34 255 34 2 34 142 20 
PUSHW[ ]	/* 1 value pushed */
370 
PUSHB[ ]	/* 8 values pushed */
15 19 31 19 48 19 3 19 
PUSHW[ ]	/* 1 value pushed */
567 
PUSHB[ ]	/* 4 values pushed */
41 119 139 24 
CALL[ ]	/* CallFunction */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[00100]	/* MoveIndirectRelPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
DELTAP1[ ]	/* DeltaExceptionP1 */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTPV[ ]	/* SetFVectorToPVector */
MDAP[0]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
SFVTPV[ ]	/* SetFVectorToPVector */
RDTG[ ]	/* RoundDownToGrid */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
RTG[ ]	/* RoundToGrid */
RS[ ]	/* ReadStore */
JROF[ ]	/* JumpRelativeOnFalse */
NPUSHB[ ]	/* 54 values pushed */
24 37 4 16 36 38 4 37 6 93 0 24 16 26 93 1 28 12 26 93 1 8 32 6 93 0 5 35 3 93 1 25 15 23 93 0 27 13 29 93 1 12 11 28 29 7 33 9 93 0 8 9 32 31 
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
CALL[ ]	/* CallFunction */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
FLIPRGON[ ]	/* FlipRangeOn */
FLIPRGON[ ]	/* FlipRangeOn */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1083;
}
);
note = S;
unicode = 83;
},
{
glyphname = T;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(375,1237,l),
(375,0,l),
(650,0,l),
(650,1237,l),
(988,1237,l),
(988,1466,l),
(36,1466,l),
(36,1237,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
2 7 105 1 0 2 5 8 1 2 
PUSHW[ ]	/* 1 value pushed */
377 
PUSHB[ ]	/* 3 values pushed */
4 0 7 
PUSHW[ ]	/* 1 value pushed */
377 
PUSHB[ ]	/* 5 values pushed */
5 63 9 1 9 
PUSHW[ ]	/* 1 value pushed */
568 
PUSHB[ ]	/* 3 values pushed */
4 103 5 
PUSHW[ ]	/* 1 value pushed */
568 
PUSHB[ ]	/* 4 values pushed */
8 177 203 24 
CALL[ ]	/* CallFunction */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[00110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 1024;
}
);
note = T;
unicode = 84;
},
{
glyphname = U;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(88,243,o),
(164,96,o),
(305,27,cs),
(375,-8,o),
(468,-25,o),
(584,-25,cs),
(807,-25,o),
(950,64,o),
(1009,222,cs),
(1038,301,o),
(1053,398,o),
(1053,513,cs),
(1053,1466,l),
(773,1466,l),
(773,530,ls),
(773,355,o),
(751,294,o),
(691,251,cs),
(661,229,o),
(621,218,o),
(570,218,cs),
(466,218,o),
(398,279,o),
(380,368,cs),
(371,413,o),
(366,471,o),
(366,543,cs),
(366,1466,l),
(88,1466,l),
(88,567,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
102 19 121 8 220 15 220 19 233 15 233 19 6 43 8 11 1 2 6 111 17 9 11 10 103 13 13 159 12 175 12 191 12 207 12 4 12 74 23 1 2 103 21 21 15 0 48 0 144 0 160 0 176 0 192 0 6 0 73 22 97 200 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
RS[ ]	/* ReadStore */
JROF[ ]	/* JumpRelativeOnFalse */
NPUSHB[ ]	/* 30 values pushed */
3 20 15 38 8 37 4 38 19 37 7 16 10 93 1 5 18 2 93 0 9 14 6 93 0 3 20 6 93 0 
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
FLIPRGON[ ]	/* FlipRangeOn */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1147;
}
);
note = U;
unicode = 85;
},
{
glyphname = V;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(725,0,l),
(1152,1466,l),
(857,1466,l),
(656,677,ls),
(638,608,o),
(615,505,o),
(586,367,c),
(576,462,o),
(547,600,o),
(498,783,cs),
(317,1466,l),
(15,1466,l),
(430,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
7 2 23 2 71 2 87 2 119 9 5 34 9 45 10 50 9 62 10 66 9 77 10 84 9 89 10 100 9 107 10 124 10 138 10 156 9 155 10 175 10 191 10 16 48 12 1 10 4 1 1 121 0 10 20 0 0 10 9 4 7 7 121 8 9 20 8 8 9 4 10 8 7 7 1 1 0 2 10 9 8 1 10 0 7 9 8 0 
PUSHW[ ]	/* 3 values pushed */
388 8 388 
NPUSHB[ ]	/* 17 values pushed */
64 4 128 4 2 32 4 48 4 96 4 144 4 208 4 5 4 
RTHG[ ]	/* RoundToHalfGrid */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
RTG[ ]	/* RoundToGrid */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTCA[1]	/* SetFVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
SDPVTL[1]	/* SetDualPVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
CALL[ ]	/* CallFunction */
SDPVTL[1]	/* SetDualPVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
MDRP[00100]	/* MoveDirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1176;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(590,0,l),
(851,1073,l),
(1107,0,l),
(1413,0,l),
(1706,1466,l),
(1424,1466,l),
(1249,496,l),
(1018,1466,l),
(689,1466,l),
(452,491,l),
(285,1466,l),
(0,1466,l),
(285,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 155 values pushed */
69 10 1 31 3 16 4 16 8 31 9 16 11 31 12 6 11 3 4 4 11 9 4 11 26 3 21 4 43 3 36 4 44 9 37 11 59 3 51 4 79 3 64 4 64 8 79 9 64 11 79 12 92 3 83 4 155 3 186 9 181 11 205 9 194 11 25 9 3 6 4 47 3 32 4 47 9 32 11 47 14 63 3 48 4 63 9 48 11 64 0 66 1 79 3 64 4 79 6 79 7 64 8 79 9 65 11 79 12 187 3 180 4 187 9 180 11 203 3 196 4 203 9 196 11 219 3 212 4 219 9 212 11 235 3 228 4 235 9 228 11 252 3 244 4 251 9 244 11 41 211 10 3 4 32 
PUSHW[ ]	/* 1 value pushed */
-238 
PUSHB[ ]	/* 4 values pushed */
5 9 8 32 
PUSHW[ ]	/* 1 value pushed */
-239 
NPUSHB[ ]	/* 88 values pushed */
2 12 11 32 12 2 1 1 121 0 12 20 0 0 12 4 10 9 9 133 5 4 20 5 5 4 8 5 6 6 121 7 8 20 7 7 8 3 10 11 11 133 2 3 20 2 2 3 10 5 2 3 12 7 6 6 4 4 3 3 1 1 0 2 12 11 11 9 9 8 8 1 12 0 3 11 2 4 9 10 6 8 7 5 79 2 1 2 
PUSHW[ ]	/* 1 value pushed */
300 
PUSHB[ ]	/* 4 values pushed */
64 5 1 5 
PUSHW[ ]	/* 1 value pushed */
300 
PUSHB[ ]	/* 4 values pushed */
64 7 1 7 
PUSHW[ ]	/* 1 value pushed */
569 
PUSHB[ ]	/* 4 values pushed */
64 10 1 10 
PUSHW[ ]	/* 1 value pushed */
569 
NPUSHB[ ]	/* 22 values pushed */
48 0 160 0 2 32 0 48 0 79 0 112 0 224 0 5 0 73 13 118 124 24 
CALL[ ]	/* CallFunction */
RTHG[ ]	/* RoundToHalfGrid */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
RTG[ ]	/* RoundToGrid */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[11101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[01101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[01101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[01101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP2[ ]	/* SetRefPoint2 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTCA[1]	/* SetFVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
SDPVTL[1]	/* SetDualPVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
CALL[ ]	/* CallFunction */
SDPVTL[1]	/* SetDualPVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
CALL[ ]	/* CallFunction */
SDPVTL[1]	/* SetDualPVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
CALL[ ]	/* CallFunction */
SDPVTL[1]	/* SetDualPVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
MDRP[00100]	/* MoveDirectRelPt */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
DELTAP3[ ]	/* DeltaExceptionP3 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1707;
}
);
note = W;
unicode = 87;
},
{
glyphname = X;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-3,0,l),
(321,0,l),
(573,491,l),
(822,0,l),
(1133,0,l),
(734,765,l),
(1103,1466,l),
(793,1466,l),
(573,990,l),
(353,1466,l),
(37,1466,l),
(405,765,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
6 2 9 8 2 2 3 10 1 6 5 6 1 9 4 8 7 0 9 4 11 10 3 0 7 1 0 7 7 121 6 1 20 6 6 1 3 4 9 9 121 10 3 20 10 10 3 4 3 3 1 1 0 2 6 7 7 10 9 8 1 
PUSHW[ ]	/* 1 value pushed */
570 
PUSHB[ ]	/* 4 values pushed */
0 142 10 3 
PUSHW[ ]	/* 1 value pushed */
570 
PUSHB[ ]	/* 3 values pushed */
4 135 7 
PUSHW[ ]	/* 4 values pushed */
570 6 9 570 
NPUSHB[ ]	/* 20 values pushed */
10 32 6 48 6 2 6 74 13 32 10 48 10 2 10 73 12 118 124 24 
CALL[ ]	/* CallFunction */
RTHG[ ]	/* RoundToHalfGrid */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
RTG[ ]	/* RoundToGrid */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTCA[1]	/* SetFVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
SDPVTL[1]	/* SetDualPVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
CALL[ ]	/* CallFunction */
SDPVTL[1]	/* SetDualPVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
MDRP[00100]	/* MoveDirectRelPt */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1131;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(428,0,l),
(704,0,l),
(704,615,l),
(1133,1466,l),
(814,1466,l),
(571,881,l),
(322,1466,l),
(-2,1466,l),
(428,615,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
38 1 41 3 2 68 2 84 2 100 2 116 2 4 32 2 48 2 69 2 81 2 146 2 165 2 6 32 2 62 5 62 8 3 2 1 2 3 1 121 0 8 20 0 0 8 2 3 2 1 3 121 4 5 20 4 4 5 2 6 7 2 2 1 5 8 8 0 6 7 8 4 3 3 1 1 0 2 1 
NPUSHW[ ]	/* 10 values pushed */
570 0 3 570 4 0 571 8 4 571 
PUSHB[ ]	/* 6 values pushed */
5 5 6 8 7 10 
PUSHW[ ]	/* 3 values pushed */
487 6 370 
PUSHB[ ]	/* 4 values pushed */
48 7 1 7 
PUSHW[ ]	/* 1 value pushed */
487 
PUSHB[ ]	/* 4 values pushed */
9 118 124 24 
CALL[ ]	/* CallFunction */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[00110]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
RTHG[ ]	/* RoundToHalfGrid */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
RTG[ ]	/* RoundToGrid */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTCA[1]	/* SetFVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
SFVTL[0]	/* SetFVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTCA[1]	/* SetFVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
CALL[ ]	/* CallFunction */
SFVTL[0]	/* SetFVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]	/* DeltaExceptionP2 */
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP3[ ]	/* DeltaExceptionP3 */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1131;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Z;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(646,1232,l),
(19,243,l),
(19,0,l),
(987,0,l),
(987,232,l),
(356,232,l),
(987,1251,l),
(987,1466,l),
(93,1466,l),
(93,1232,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
121 8 134 3 137 8 153 8 169 8 5 4 5 11 2 8 2 3 3 121 7 8 20 7 7 8 7 3 2 8 9 105 1 0 2 4 3 105 5 6 8 7 9 3 8 6 2 1 74 11 9 227 15 6 1 6 73 10 177 203 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[00100]	/* MoveIndirectRelPt */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTCA[1]	/* SetFVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
SDPVTL[1]	/* SetDualPVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
MDRP[00100]	/* MoveDirectRelPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1024;
}
);
note = Z;
unicode = 90;
},
{
glyphname = bracketleft;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(644,-192,l),
(413,-192,l),
(413,1245,l),
(644,1245,l),
(644,1466,l),
(146,1466,l),
(146,-413,l),
(644,-413,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
6 7 9 2 3 4 127 2 1 16 6 5 127 7 0 18 2 169 4 5 107 0 0 0 1 32 1 48 1 3 1 
PUSHW[ ]	/* 2 values pushed */
652 8 
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[00100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 683;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = backslash;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(543,-25,l),
(176,1491,l),
(-31,1491,l),
(332,-25,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
119 1 1 0 1 2 2 
PUSHW[ ]	/* 1 value pushed */
594 
NPUSHB[ ]	/* 13 values pushed */
3 0 20 3 3 0 2 3 10 1 0 0 3 
PUSHW[ ]	/* 1 value pushed */
292 
PUSHB[ ]	/* 8 values pushed */
47 2 63 2 79 2 3 2 
PUSHW[ ]	/* 1 value pushed */
321 
NPUSHB[ ]	/* 13 values pushed */
5 1 239 32 0 48 0 64 0 3 0 73 4 
PUSHW[ ]	/* 3 values pushed */
418 315 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTCA[1]	/* SetFVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
SDPVTL[1]	/* SetDualPVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
MDRP[00100]	/* MoveDirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 512;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = bracketright;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38,1247,l),
(269,1247,l),
(269,-192,l),
(38,-192,l),
(38,-413,l),
(536,-413,l),
(536,1466,l),
(38,1466,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 3 4 5 6 127 0 7 16 4 3 127 1 2 18 7 6 169 5 4 107 1 1 0 
PUSHW[ ]	/* 2 values pushed */
652 9 
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[10100]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 683;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = asciicircum;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(360,668,l),
(512,1149,l),
(663,668,l),
(930,668,l),
(615,1466,l),
(409,1466,l),
(93,668,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 4 31 4 47 4 3 58 0 53 1 74 0 69 1 86 0 89 1 119 0 120 1 120 3 119 5 10 0 6 1 2 4 2 3 3 6 5 
PUSHW[ ]	/* 3 values pushed */
506 4 611 
PUSHB[ ]	/* 4 values pushed */
1 0 0 5 
NPUSHW[ ]	/* 9 values pushed */
608 6 3 608 64 2 380 6 380 
NPUSHB[ ]	/* 11 values pushed */
32 48 4 1 4 4 8 7 92 201 24 
CALL[ ]	/* CallFunction */
RTHG[ ]	/* RoundToHalfGrid */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
SMD[ ]	/* SetMinimumDistance */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[11101]	/* MoveIndirectRelPt */
SMD[ ]	/* SetMinimumDistance */
RTG[ ]	/* RoundToGrid */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1024;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = underscore;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1036,-256,l),
(1036,-154,l),
(-12,-154,l),
(-12,-256,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 0 
PUSHW[ ]	/* 1 value pushed */
333 
NPUSHB[ ]	/* 11 values pushed */
2 3 1 74 5 0 73 4 141 114 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00110]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]	/* MoveDirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 1024;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = grave;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(472,1197,l),
(372,1495,l),
(77,1495,l),
(310,1197,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 3 16 3 2 3 
PUSHW[ ]	/* 1 value pushed */
620 
PUSHB[ ]	/* 3 values pushed */
0 0 3 
PUSHW[ ]	/* 4 values pushed */
610 2 1 266 
PUSHB[ ]	/* 4 values pushed */
160 2 1 2 
PUSHW[ ]	/* 1 value pushed */
483 
PUSHB[ ]	/* 6 values pushed */
79 0 1 0 210 4 
PUSHW[ ]	/* 1 value pushed */
619 
PUSHB[ ]	/* 2 values pushed */
149 24 
CALL[ ]	/* CallFunction */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[01101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 683;
}
);
note = grave;
unicode = 96;
},
{
glyphname = braceleft;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(288,1491,o),
(229,1416,o),
(192,1321,cs),
(173,1274,o),
(164,1181,o),
(164,1043,cs),
(164,884,o),
(151,783,o),
(125,742,cs),
(99,700,o),
(66,672,o),
(26,658,c),
(26,405,l),
(75,386,o),
(109,352,o),
(128,305,cs),
(147,258,o),
(158,171,o),
(160,45,cs),
(167,-344,o),
(239,-431,o),
(532,-431,c),
(532,-194,l),
(451,-191,o),
(411,-141,o),
(411,-44,cs),
(413,75,ls),
(413,337,o),
(345,489,o),
(210,531,c),
(299,570,o),
(346,615,o),
(386,745,cs),
(405,810,o),
(415,880,o),
(415,956,cs),
(412,1105,ls),
(412,1204,o),
(452,1254,o),
(532,1254,c),
(532,1491,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
8 24 3 10 4 11 13 14 29 0 21 
PUSHW[ ]	/* 3 values pushed */
625 20 625 
NPUSHB[ ]	/* 26 values pushed */
32 111 8 127 8 2 8 8 14 1 128 0 17 13 128 14 19 0 230 4 130 11 241 24 130 17 
PUSHW[ ]	/* 1 value pushed */
339 
PUSHB[ ]	/* 8 values pushed */
0 20 32 20 48 20 3 20 
PUSHW[ ]	/* 2 values pushed */
421 28 
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
SMD[ ]	/* SetMinimumDistance */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 555;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = bar;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(367,1466,l),
(144,1466,l),
(144,-407,l),
(367,-407,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
3 1 0 2 3 155 0 0 31 1 48 1 2 1 73 4 95 150 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MDAP[1]	/* MoveDirectAbsPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 512;
}
);
note = bar;
unicode = 124;
},
{
glyphname = braceright;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(102,1254,o),
(142,1204,o),
(142,1105,cs),
(140,969,ls),
(140,728,o),
(208,582,o),
(345,531,c),
(257,496,o),
(211,460,o),
(172,317,cs),
(152,246,o),
(142,171,o),
(142,94,cs),
(144,-44,ls),
(144,-143,o),
(104,-193,o),
(23,-194,c),
(23,-431,l),
(47,-431,ls),
(239,-431,o),
(330,-363,o),
(365,-238,cs),
(382,-175,o),
(392,-81,o),
(395,45,cs),
(397,170,o),
(408,257,o),
(428,305,cs),
(447,352,o),
(481,386,o),
(529,405,c),
(529,658,l),
(475,680,o),
(439,716,o),
(420,767,cs),
(401,818,o),
(391,909,o),
(391,1042,cs),
(391,1174,o),
(380,1269,o),
(359,1327,cs),
(316,1442,o),
(238,1487,o),
(23,1491,c),
(23,1254,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
26 17 16 3 0 24 20 19 3 4 27 8 
PUSHW[ ]	/* 3 values pushed */
625 7 625 
NPUSHB[ ]	/* 21 values pushed */
32 24 24 15 29 128 0 17 17 128 15 15 16 19 0 230 27 241 4 130 11 
PUSHW[ ]	/* 4 values pushed */
339 7 421 31 
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
SMD[ ]	/* SetMinimumDistance */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
SRP2[ ]	/* SetRefPoint2 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 555;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = asciitilde;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(919,851,o),
(805,783,o),
(724,783,cs),
(688,783,o),
(619,806,o),
(516,853,cs),
(423,895,o),
(355,916,o),
(312,916,cs),
(235,916,o),
(147,871,o),
(49,780,c),
(49,528,l),
(148,625,o),
(231,674,o),
(297,674,cs),
(346,674,o),
(431,643,o),
(553,582,cs),
(612,553,o),
(665,538,o),
(712,538,cs),
(796,538,o),
(884,579,o),
(976,662,c),
(976,910,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
8 2 7 8 7 11 8 18 24 2 23 8 23 11 24 18 40 2 39 8 39 11 40 18 56 2 55 8 55 11 56 18 16 10 111 9 175 3 7 111 12 1 111 0 175 12 3 111 16 
PUSHW[ ]	/* 1 value pushed */
444 
NPUSHB[ ]	/* 12 values pushed */
12 1 0 74 20 10 9 73 19 88 89 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]	/* MoveDirectAbsPt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1024;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = agrave;
lastChange = "2023-06-09 21:54:24 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (171,0);
ref = grave;
}
);
width = 1024;
}
);
note = agrave;
unicode = 224;
},
{
glyphname = egrave;
lastChange = "2023-06-09 21:54:24 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (171,0);
ref = grave;
}
);
width = 1024;
}
);
note = egrave;
unicode = 232;
},
{
glyphname = copyright;
lastChange = "2023-08-07 23:18:27 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(600,1491,o),
(355,1370,o),
(202,1129,cs),
(125,1008,o),
(87,874,o),
(87,725,cs),
(87,301,o),
(430,-41,o),
(853,-41,cs),
(1276,-41,o),
(1619,302,o),
(1619,725,cs),
(1619,1022,o),
(1444,1283,o),
(1213,1402,cs),
(1098,1461,o),
(978,1491,o),
(853,1491,cs)
);
},
{
closed = 1;
nodes = (
(238,1076,o),
(522,1340,o),
(853,1340,cs),
(1184,1340,o),
(1468,1074,o),
(1468,725,cs),
(1468,385,o),
(1193,110,o),
(853,110,cs),
(514,110,o),
(238,385,o),
(238,725,cs)
);
},
{
closed = 1;
nodes = (
(477,454,o),
(639,297,o),
(864,297,cs),
(1029,297,o),
(1193,413,o),
(1213,612,c),
(1039,612,l),
(1006,497,o),
(942,440,o),
(847,440,cs),
(732,440,o),
(653,540,o),
(653,725,cs),
(653,904,o),
(728,1007,o),
(860,1007,cs),
(945,1007,o),
(1005,961,o),
(1038,868,c),
(1213,868,l),
(1192,1029,o),
(1029,1149,o),
(866,1149,cs),
(625,1149,o),
(477,983,o),
(477,719,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
61 16 51 18 51 22 61 24 137 43 132 45 144 26 183 48 8 57 2 116 42 116 46 155 31 155 35 157 48 165 29 7 38 
PUSHW[ ]	/* 1 value pushed */
673 
PUSHB[ ]	/* 8 values pushed */
15 39 31 39 47 39 3 39 
PUSHW[ ]	/* 1 value pushed */
675 
PUSHB[ ]	/* 5 values pushed */
41 175 27 1 27 
PUSHW[ ]	/* 1 value pushed */
673 
PUSHB[ ]	/* 8 values pushed */
16 26 128 26 176 26 3 26 
PUSHW[ ]	/* 3 values pushed */
611 47 640 
NPUSHB[ ]	/* 13 values pushed */
15 30 111 30 191 30 207 30 4 30 195 7 41 
PUSHW[ ]	/* 1 value pushed */
640 
NPUSHB[ ]	/* 12 values pushed */
0 36 96 36 176 36 192 36 4 36 195 14 
PUSHW[ ]	/* 1 value pushed */
681 
PUSHB[ ]	/* 4 values pushed */
128 0 1 0 
PUSHW[ ]	/* 3 values pushed */
680 20 681 
PUSHB[ ]	/* 3 values pushed */
7 11 39 
PUSHW[ ]	/* 4 values pushed */
642 38 26 642 
PUSHB[ ]	/* 3 values pushed */
38 27 44 
PUSHW[ ]	/* 4 values pushed */
641 33 27 638 
PUSHB[ ]	/* 5 values pushed */
4 79 33 1 33 
PUSHW[ ]	/* 4 values pushed */
591 10 23 639 
PUSHB[ ]	/* 4 values pushed */
128 4 1 4 
PUSHW[ ]	/* 3 values pushed */
637 17 639 
PUSHB[ ]	/* 6 values pushed */
10 210 49 92 201 24 
CALL[ ]	/* CallFunction */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[11101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[11101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[11101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[00100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
MIRP[00100]	/* MoveIndirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */";
};
width = 1707;
}
);
note = copyright;
unicode = 169;
},
{
glyphname = endash;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1135,636,l),
(-4,636,l),
(-4,426,l),
(1135,426,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
2 1 127 3 0 2 74 5 0 73 4 141 114 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00110]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]	/* MoveDirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 1131;
}
);
note = endash;
unicode = 8211;
},
{
glyphname = emdash;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2048,636,l),
(0,636,l),
(0,426,l),
(2048,426,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
2 1 127 3 0 2 74 5 0 73 4 141 114 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00110]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]	/* MoveDirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 2048;
}
);
note = emdash;
unicode = 8212;
},
{
glyphname = quotedblleft;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,1153,l),
(280,1262,o),
(333,1333,o),
(436,1364,c),
(381,1480,l),
(253,1435,o),
(173,1349,o),
(150,1254,cs),
(138,1207,o),
(132,1146,o),
(132,1073,cs),
(132,872,l),
(413,872,l),
(413,1153,l)
);
},
{
closed = 1;
nodes = (
(601,872,l),
(882,872,l),
(882,1153,l),
(746,1153,l),
(749,1262,o),
(802,1333,o),
(905,1364,c),
(850,1480,l),
(722,1435,o),
(642,1349,o),
(619,1255,cs),
(607,1208,o),
(601,1147,o),
(601,1073,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
11 12 12 0 0 1 
PUSHW[ ]	/* 1 value pushed */
616 
NPUSHB[ ]	/* 9 values pushed */
9 21 20 20 9 10 195 6 18 
PUSHW[ ]	/* 4 values pushed */
282 17 7 282 
NPUSHB[ ]	/* 14 values pushed */
17 6 1 20 20 12 21 17 188 18 151 21 21 11 
PUSHW[ ]	/* 4 values pushed */
615 13 12 593 
NPUSHB[ ]	/* 12 values pushed */
10 9 9 1 10 6 188 7 151 10 2 1 
PUSHW[ ]	/* 1 value pushed */
615 
PUSHB[ ]	/* 8 values pushed */
10 0 0 23 22 95 173 24 
CALL[ ]	/* CallFunction */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 1024;
}
);
note = quotedblleft;
unicode = 8220;
},
{
glyphname = quotedblright;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(735,1185,l),
(733,1075,o),
(680,1005,o),
(577,974,c),
(632,857,l),
(760,904,o),
(840,990,o),
(864,1084,cs),
(875,1131,o),
(881,1191,o),
(881,1264,cs),
(881,1466,l),
(600,1466,l),
(600,1185,l)
);
},
{
closed = 1;
nodes = (
(160,857,l),
(288,904,o),
(368,990,o),
(392,1084,cs),
(403,1131,o),
(409,1191,o),
(409,1264,cs),
(409,1466,l),
(128,1466,l),
(128,1185,l),
(264,1185,l),
(261,1075,o),
(208,1005,o),
(105,974,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
7 18 
PUSHW[ ]	/* 1 value pushed */
282 
NPUSHB[ ]	/* 9 values pushed */
6 17 195 21 9 10 10 20 21 
PUSHW[ ]	/* 1 value pushed */
616 
NPUSHB[ ]	/* 18 values pushed */
11 1 0 0 12 11 0 9 9 2 10 6 188 7 151 10 1 2 
PUSHW[ ]	/* 4 values pushed */
615 0 10 453 
NPUSHB[ ]	/* 12 values pushed */
13 20 20 13 21 17 188 18 151 21 21 11 
PUSHW[ ]	/* 1 value pushed */
615 
PUSHB[ ]	/* 8 values pushed */
12 13 13 12 13 126 150 24 
CALL[ ]	/* CallFunction */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 1024;
}
);
note = quotedblright;
unicode = 8221;
},
{
glyphname = quoteleft;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(297,1153,l),
(300,1262,o),
(353,1333,o),
(456,1364,c),
(401,1480,l),
(273,1435,o),
(193,1349,o),
(170,1254,cs),
(158,1207,o),
(152,1146,o),
(152,1073,cs),
(152,872,l),
(433,872,l),
(433,1153,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 0 
PUSHW[ ]	/* 1 value pushed */
616 
PUSHB[ ]	/* 4 values pushed */
9 10 195 7 
PUSHW[ ]	/* 1 value pushed */
282 
NPUSHB[ ]	/* 13 values pushed */
6 1 9 9 10 1 6 188 7 151 10 10 0 
PUSHW[ ]	/* 1 value pushed */
615 
PUSHB[ ]	/* 7 values pushed */
2 32 1 48 1 2 1 
PUSHW[ ]	/* 1 value pushed */
652 
PUSHB[ ]	/* 4 values pushed */
11 95 173 24 
CALL[ ]	/* CallFunction */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 576;
}
);
note = quoteleft;
unicode = 8216;
},
{
glyphname = quoteright;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(273,1185,l),
(270,1075,o),
(217,1005,o),
(114,974,c),
(169,857,l),
(297,904,o),
(377,990,o),
(401,1084,cs),
(412,1131,o),
(418,1191,o),
(418,1264,cs),
(418,1466,l),
(137,1466,l),
(137,1185,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 2 values pushed */
7 282 
PUSHB[ ]	/* 4 values pushed */
6 195 9 10 
PUSHW[ ]	/* 1 value pushed */
616 
NPUSHB[ ]	/* 14 values pushed */
1 0 0 9 9 2 10 6 188 7 151 10 1 2 
PUSHW[ ]	/* 1 value pushed */
615 
PUSHB[ ]	/* 7 values pushed */
10 32 0 48 0 2 0 
PUSHW[ ]	/* 1 value pushed */
652 
PUSHB[ ]	/* 4 values pushed */
11 126 150 24 
CALL[ ]	/* CallFunction */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 576;
}
);
note = quoteright;
unicode = 8217;
},
{
glyphname = periodcentered;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(471,867,l),
(212,867,l),
(212,586,l),
(471,586,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
616 
PUSHB[ ]	/* 4 values pushed */
3 0 2 3 
PUSHW[ ]	/* 5 values pushed */
615 1 0 453 4 
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]	/* MoveDirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 683;
}
);
note = periodcentered;
unicode = 8729;
},
{
glyphname = quotesinglbase;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(276,0,l),
(275,-108,o),
(222,-178,o),
(117,-211,c),
(172,-327,l),
(300,-282,o),
(380,-196,o),
(404,-101,cs),
(415,-54,o),
(421,7,o),
(421,80,cs),
(421,281,l),
(140,281,l),
(140,0,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 2 values pushed */
7 282 
PUSHB[ ]	/* 5 values pushed */
6 195 10 1 0 
PUSHW[ ]	/* 1 value pushed */
616 
NPUSHB[ ]	/* 15 values pushed */
10 10 9 10 9 9 2 10 6 188 7 151 10 1 2 
PUSHW[ ]	/* 1 value pushed */
615 
NPUSHB[ ]	/* 16 values pushed */
10 15 0 31 0 32 0 48 0 4 0 73 11 95 150 24 
CALL[ ]	/* CallFunction */
FLIPOFF[ ]	/* SetAutoFlipOff */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
FLIPON[ ]	/* SetAutoFlipOn */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 576;
}
);
note = quotesinglbase;
unicode = 8218;
},
{
glyphname = quotedblbase;
lastChange = "2023-06-09 21:53:01 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(743,0,l),
(741,-109,o),
(688,-180,o),
(585,-211,c),
(640,-327,l),
(768,-282,o),
(848,-196,o),
(872,-101,cs),
(883,-54,o),
(889,7,o),
(889,80,cs),
(889,281,l),
(608,281,l),
(608,0,l)
);
},
{
closed = 1;
nodes = (
(168,-327,l),
(296,-282,o),
(376,-196,o),
(400,-101,cs),
(411,-54,o),
(417,7,o),
(417,80,cs),
(417,281,l),
(136,281,l),
(136,0,l),
(272,0,l),
(269,-109,o),
(216,-180,o),
(113,-211,c)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
7 18 
PUSHW[ ]	/* 1 value pushed */
282 
NPUSHB[ ]	/* 9 values pushed */
6 17 195 21 1 0 0 12 11 
PUSHW[ ]	/* 1 value pushed */
616 
NPUSHB[ ]	/* 18 values pushed */
21 9 10 10 21 20 10 9 9 2 10 6 188 7 151 10 1 2 
PUSHW[ ]	/* 4 values pushed */
615 0 10 453 
NPUSHB[ ]	/* 12 values pushed */
13 20 20 13 21 17 188 18 151 21 21 11 
PUSHW[ ]	/* 1 value pushed */
615 
PUSHB[ ]	/* 8 values pushed */
12 13 13 12 13 95 150 24 
CALL[ ]	/* CallFunction */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */";
};
width = 1024;
}
);
note = quotedblbase;
unicode = 8222;
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
name = Bold;
properties = (
{
key = styleNames;
values = (
{
language = ENG;
value = Bold;
}
);
},
{
key = postscriptFullName;
value = "ABN Condensed";
},
{
key = postscriptFontName;
value = "ABN-Condensed";
}
);
weightClass = 600;
widthClass = 3;
}
);
kerningLTR = {
m01 = {
A = {
C = 0;
G = 0;
O = 0;
Q = 0;
T = -45;
U = -31;
V = -59;
W = 29;
Y = -35;
quotedblright = -104;
quoteright = -135;
};
B = {
A = 43;
U = -31;
comma = -31;
period = -45;
};
C = {
comma = -29;
period = -45;
};
D = {
A = -59;
V = -45;
W = 0;
Y = -104;
comma = -31;
period = -45;
};
F = {
A = -121;
comma = -211;
period = -225;
};
G = {
comma = -31;
period = -45;
};
J = {
A = 29;
colon = -45;
comma = -45;
period = -59;
semicolon = -45;
};
K = {
C = -31;
G = -31;
O = -31;
};
L = {
C = -31;
G = -45;
O = -45;
T = -45;
U = -59;
V = -45;
W = -31;
Y = -104;
quotedblright = -31;
quoteright = -31;
};
N = {
A = -31;
comma = 0;
period = -31;
};
O = {
A = 0;
T = -31;
V = -31;
W = 0;
X = -45;
Y = -31;
comma = -31;
period = -45;
};
P = {
A = -59;
comma = -238;
period = -254;
};
Q = {
A = 100;
T = -31;
U = 0;
V = -31;
W = 0;
Y = -45;
comma = 0;
period = -31;
};
R = {
C = -45;
G = -45;
O = -45;
Q = -45;
T = -31;
U = -45;
V = -31;
W = 0;
Y = -45;
};
S = {
comma = 0;
period = -31;
};
T = {
A = -45;
C = -31;
G = -31;
O = -31;
Q = -31;
colon = -45;
comma = -164;
hyphen = -43;
period = -180;
semicolon = -45;
};
U = {
A = -59;
comma = -31;
period = -45;
};
V = {
A = -45;
C = 0;
G = 0;
O = 0;
Q = -31;
colon = -31;
comma = -104;
hyphen = 29;
period = -121;
semicolon = -31;
};
W = {
A = 27;
C = 0;
G = 0;
O = 0;
colon = -31;
comma = -90;
hyphen = 29;
period = -104;
semicolon = -31;
};
X = {
C = -31;
G = -31;
O = -31;
};
Y = {
A = -31;
C = -45;
G = -45;
O = -31;
S = 0;
colon = -45;
comma = -178;
hyphen = -59;
period = -195;
semicolon = -45;
};
colon = {
space = 0;
};
comma = {
quotedblright = -76;
quoteright = -90;
space = 0;
};
period = {
quotedblright = -76;
quoteright = -90;
space = 0;
};
quotedblleft = {
A = -117;
};
quotedblright = {
space = 0;
};
quoteleft = {
A = -164;
quoteleft = 0;
};
quoteright = {
quoteright = 0;
space = 0;
};
quotesinglbase = {
quotesinglbase = -190;
};
semicolon = {
space = 0;
};
space = {
A = 0;
T = 0;
V = 0;
W = 0;
Y = 0;
quotedblright = 0;
quoteleft = 0;
};
};
};
metrics = (
{
type = ascender;
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Ben Paine and ABN";
}
);
},
{
key = familyNames;
values = (
{
language = ENG;
value = "ABN Condensed";
}
);
},
{
key = trademarks;
values = (
{
language = ENG;
value = "Ben Paine and ABN";
}
);
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 2048;
versionMajor = 1;
versionMinor = 0;
}
